## @configure_input@
##
## @file    Makefile
## @brief   Create the API reference manuals and other documentation.
## @author  Michael Hucka (Caltech)
##
## $Id$
## $HeadURL$
##
## This file is part of libSBML.  Please visit http://sbml.org for more
## information about SBML, and the latest version of libSBML.
##
## Copyright 2005-2009 California Institute of Technology.
## Copyright 2002-2005 California Institute of Technology and
##                     Japan Science and Technology Corporation.
## 
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation.  A copy of the license agreement is provided
## in the file named "LICENSE.txt" included with this software distribution
## and also available online as http://sbml.org/software/libsbml/license.html
##


# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under srcdir.  Don't 
# set `subdir' to an absolute path, or some `make' actions will fail.

srcdir  = @srcdir@
thisdir = docs/src

# We currently only generate documentation in HTML format.

# In order to be able to create distributions with ready-to-read docs, we
# have a separate directory for formatted docs.

formatted     = ../formatted

cpp-manual    = $(formatted)/cpp-api
c-manual      = $(formatted)/c-api
java-manual   = $(formatted)/java-api
python-manual = $(formatted)/python-api
perl-manual   = $(formatted)/perl-api

# The C++ and C manuals are always made, but additional manuals depend on
# the options with which libSBML was configured.

docs = $(cpp-manual) $(c-manual)

ifdef USE_JAVA
  docs += $(java-manual)
endif
ifdef USE_PYTHON
  docs += $(python-manual)
endif
ifdef USE_PERL
  docs += $(perl-manual)
endif

# The variable `extra_clean' is used in `makefile-common-actions.mk'
# for `make dist'.  Normally you wouldn't want to remove documentation
# files, but the following are all generated files and directories.

# We don't want to remove the formatted docs during a regular make clean,
# only a distclean.

extra_distclean =               \
        $(docs)                 \
        doxygen-config-c.txt    \
        doxygen-config-cpp.txt  \
        doxygen-config-perl.txt \
        doxygen-config-python.txt

# The `make dist' rules for this directory are more complicated than usual.
# There are additional separate rules below.

distfiles =                                    \
        DoxygenLayout.xml                      \
        ExcludeDoclet.java                     \
        doxygen-base.css                       \
        doxygen-config-c.txt.in                \
        doxygen-config-common.txt              \
        doxygen-config-cpp.txt.in              \
        doxygen-config-perl.txt.in             \
        doxygen-config-python.txt.in           \
        doxygen-footer.html                    \
        doxygen-header.html                    \
        doxygen-tabs.css                       \
        doxygen-tree.css                       \
        Makefile.in                            \
        examples/readmath.cpp                  \
        examples/readSBML.java                 \
        examples/simpleread.cpp                \
        graphics/astnode-illustration.jpg      \
        graphics/built-in-units.jpg            \
        graphics/compartment-size.jpg          \
        graphics/listof-illustration.jpg       \
        graphics/right-arrow.gif               \
        graphics/math-formula-precedence.jpg   \
        graphics/math-string-functions.jpg     \
        graphics/sbase-species.eps             \
        graphics/sbase-species.pdf             \
        graphics/sbase-species.vthought        \
        graphics/sbase.eps                     \
        graphics/sbase.pdf                     \
        graphics/sbase.vtt                     \
        graphics/sbml-logo-long-124x56.gif     \
        graphics/species-boundarycondition.jpg \
        graphics/species-hasonlysubstance.jpg  \
        graphics/species.eps                   \
        graphics/species.pdf                   \
        graphics/species.vtt                   \
        graphics/string-functions.jpg          \
        graphics/string-syntax.jpg             \
        graphics/top-level.eps                 \
        graphics/top-level.pdf                 \
        graphics/top-level.vtt                 \
        graphics/unitdefinition.eps            \
        graphics/unitdefinition.pdf            \
        graphics/unitdefinition.vtt            \
        java-skip.txt                          \
        libsbml-accessing.html                 \
        libsbml-accessing.txt                  \
        libsbml-authors.html                   \
        libsbml-blurb.html                     \
        libsbml-blurb.txt                      \
        libsbml-coding.txt                     \
        libsbml-communications.html            \
        libsbml-communications.txt             \
        libsbml-conversion-warnings.txt        \
        libsbml-conversion-warnings.html       \
        libsbml-features.html                  \
        libsbml-features.txt                   \
        libsbml-installation.html              \
        libsbml-installation.txt               \
        libsbml-issues.html                    \
        libsbml-issues.txt                     \
        libsbml-java-bottom.html               \
        libsbml-java-fake-overview.html        \
        libsbml-java-footer.html               \
        libsbml-java-math.html                 \
        libsbml-java-overview.html             \
        libsbml-java-reading.html              \
        libsbml-java-top.html                  \
        libsbml-java-verb-top.html             \
        libsbml-java-verb-bottom.html          \
        libsbml-license.txt                    \
        libsbml-mainpage.txt                   \
        libsbml-math.txt                       \
        libsbml-news.txt                       \
        libsbml-papers.html                    \
        libsbml-papers.txt                     \
        libsbml-python-mainpage.txt            \
        libsbml-python-reading-files.txt       \
        libsbml-reading-files.txt              \
        libsbml-uninstallation.html            \
        libsbml-uninstallation.txt             \
        pythondocfilter.py                     \
        sbml.js                                \
        templates/c++.txt                      \
        templates/c.txt                        \
        templates/m4.txt                       \
        templates/makefile.txt                 \
        templates/python.txt


# -----------------------------------------------------------------------------
# Primary build actions
# -----------------------------------------------------------------------------

# The default rules in `makefile-common-actions.mk' know to interpret goals
# of the form `foo-recursive' to run 'make foo' in directories defined in
# variable `subdirs'.

all docs: Makefile $(docs)


# -----------------------------------------------------------------------------
# Checking.
# -----------------------------------------------------------------------------

ifdef USE_LIBCHECK
  check: all run-checks
else
  check:
	$(error "Please first rerun 'configure' with the --with-check flag")
endif


# -----------------------------------------------------------------------------
# API reference manuals.
# -----------------------------------------------------------------------------

#
# Rules for remaking the C++, C, Python and Perl manuals.
#
# These require configuring libSBML with --with-doxygen *and* a
# sufficiently recent version of doxygen.  The version check is done by
# configure.
#

doxygen-cpp-conf  = doxygen-config-cpp.txt.in doxygen-config-common.txt
doxygen-c-conf    = doxygen-config-c.txt.in doxygen-config-common.txt
doxygen-py-conf   = doxygen-config-python.txt.in doxygen-config-common.txt
doxygen-perl-conf = doxygen-config-perl.txt.in doxygen-config-common.txt

doxygen-config-cpp.txt:  $(doxygen-cpp-conf) $(TOP_SRCDIR)/VERSION.txt
	cd $(TOP_BUILDDIR) && \
	  $(SHELL) ./config.status $(thisdir)/doxygen-config-cpp.txt

doxygen-config-c.txt:  $(doxygen-c-conf) $(TOP_SRCDIR)/VERSION.txt
	cd $(TOP_BUILDDIR) && \
	  $(SHELL) ./config.status $(thisdir)/doxygen-config-c.txt

doxygen-config-python.txt:  $(doxygen-py-conf) $(TOP_SRCDIR)/VERSION.txt
	cd $(TOP_BUILDDIR) && \
	  $(SHELL) ./config.status $(thisdir)/doxygen-config-python.txt

doxygen-config-perl.txt:  $(doxygen-perl-conf) $(TOP_SRCDIR)/VERSION.txt
	cd $(TOP_BUILDDIR) && \
	  $(SHELL) ./config.status $(thisdir)/doxygen-config-perl.txt

core-sources = \
  $(wildcard ../../src/*/*.[cpp,h]) \
  $(wildcard libsbml-*.txt) \
  $(wildcard libsbml-*.html)

ifneq "$(USE_DOXYGEN)" ""

doxygen-minor-version = $(shell $(DOXYGEN) --version | cut -f2 -d'.')

# Helper function for running doxygen and doing some kludgy hacking of the
# output.  This will surely break in other versions of doxygen, but the
# necessity comes from the fact that doxygen before 1.5.x did not provide
# any control over the appearance of the left-hand side tree listing.
# Doxygen 1.5.x does, but now it does other silly things that we want to
# correct.

define run_doxygen
  mkdir -p $(2)
  $(DOXYGEN) $(1)
  cp -rf doxygen-tabs.css $(2)/tabs.css
  cp graphics/sbml-logo-long-124x56.gif $(2)
  cp graphics/right-arrow.gif $(2)
  if test $(doxygen-minor-version) -lt 5; then \
    head -n 9 $(2)/tree.html > tmp.html;\
    cat doxygen-tree.css >> tmp.html;\
    tail -n +15 $(2)/tree.html >> tmp.html;\
    mv -f tmp.html $(2)/tree.html;\
  else \
    sed -is 's/libSBML Python Public API //' $(2)/tree.html;\
    sed -is 's/libSBML C++ Public API //' $(2)/tree.html;\
    sed -is 's/libSBML C Public API //' $(2)/tree.html;\
    sed -is 's/libSBML Perl Public API //' $(2)/tree.html;\
  fi
endef

cpp-manual $(cpp-manual): doxygen-config-cpp.txt $(core-sources)
	$(call run_doxygen,doxygen-config-cpp.txt,$(cpp-manual))

c-manual $(c-manual): doxygen-config-c.txt $(core-sources)
	$(call run_doxygen,doxygen-config-c.txt,$(c-manual))

ifdef USE_PYTHON
python-sources = ../../src/bindings/python/libsbml.py

python-manual $(python-manual): doxygen-config-python.txt $(python-sources)
	$(call run_doxygen,doxygen-config-python.txt,$(python-manual))
endif

ifdef USE_PERL
perl-sources = ../../src/bindings/perl/LibSBML.pm

perl-manual $(perl-manual): doxygen-config-perl.txt $(perl-sources)
	$(call run_doxygen,doxygen-config-perl.txt,$(perl-manual))
endif


else
# Doxygen hasn't been configured suitably.

define nodoxygen

  Cannot make create this manual, either because libSBML was not
  configured using --with-doxygen, or 'doxygen' cannot be found, or
  the version of 'doxygen' found is too old.  Please reconfigure with
  a suitable value for the configuration flag --with-doxygen
endef

docs:
	$(error $(nodoxygen))

endif

#
# Rules for making the Java manual.
#
# This runs Javadoc on the .java files in src/bindings/java/java-files/ and
# doesn't need doxygen at all.  The Java bindings need to have been created
# first, which should be the case for the copy of libSBML that's shipped
# anyway even if the end users does not configure --with-java.  Creating
# the Java bindings should have run src/bindings/swig/swigdoc.py as a
# by-product.  Our swigdoc.py program has the task of inserting back into
# the .java files the documentation comments that are currently left out by
# swig itself.
# 

ifdef USE_JAVA

java-dir            = ../../src/bindings/java/java-files

javadoc-doctitle    = "@PACKAGE_NAME@ @PACKAGE_VERSION@ Java API Reference"
javadoc-header      = "<B>@PACKAGE_NAME@<BR>@PACKAGE_VERSION@<B>"
javadoc-footer      = "`cat libsbml-java-footer.html`"
javadoc-windowtitle = "LibSBML Java API"

define merge_html
  cat libsbml-java-top.html $(1) libsbml-java-bottom.html libsbml-java-footer.html \
  | sed -e 's/%%title%%/$(3)/g;s/%%version%%/@PACKAGE_VERSION@/g' > $(2)
endef

define merge_html_verb
  cat libsbml-java-top.html libsbml-java-verb-top.html $(1) \
  libsbml-java-verb-bottom.html libsbml-java-bottom.html libsbml-java-footer.html \
  | sed -e 's/%%title%%/$(3)/g;s/%%version%%/@PACKAGE_VERSION@/g' > $(2)
endef

# Compile the ExcludeDoclet class file if needed.

ExcludeDoclet.class: ExcludeDoclet.java
	$(JAVAC) -nowarn -cp $(JAVADOC_JAR) $<

# There are certain things I can't figure out how to make compatible
# between doxygen and javadoc.  Let's ignore the warnings to avoid
# confusing users.

ignorable-warnings = "warning - @param argument"

java-manual $(java-manual): $(core-sources) ExcludeDoclet.class
	$(JAVA) -cp $(JAVADOC_JAR):. ExcludeDoclet -excludefile java-skip.txt \
	    -use -public -version -author -sourcetab 4 -keywords \
	    -header $(javadoc-header) \
	    -bottom $(javadoc-footer) \
	    -windowtitle $(javadoc-windowtitle) \
	    -doctitle $(javadoc-doctitle) \
	    -overview libsbml-java-fake-overview.html \
	    -stylesheetfile doxygen-base.css \
	    -d $(java-manual) \
	    -tag note:a:"Note:" \
	    -tag warning:a:"Warning:" \
	    -tag docnote:a:"Documentation note:" \
	    -sourcepath $(java-dir) org.sbml.libsbml \
        2>&1 | grep -v $(ignorable-warnings) 
	cp -f graphics/sbml-logo-long-124x56.gif $(java-manual)
	cp -f graphics/sbml-logo-long-124x56.gif $(java-manual)/org/sbml/libsbml/
	cp -f graphics/*.jpg $(java-manual)/org/sbml/libsbml/
	$(call merge_html,libsbml-java-overview.html,$(java-manual)/overview-summary.html,Java @PACKAGE_VERSION@ API)
	$(call merge_html,libsbml-installation.html,$(java-manual)/libsbml-installation.html,installation)
	$(call merge_html,libsbml-accessing.html,$(java-manual)/libsbml-accessing.html,accessibility to your software)
	$(call merge_html,libsbml-features.html,$(java-manual)/libsbml-features.html,features)
	$(call merge_html,libsbml-communications.html,$(java-manual)/libsbml-communications.html,bug reports and other communications)
	$(call merge_html,libsbml-java-reading.html,$(java-manual)/libsbml-java-reading.html,basic facilities for reading and writing SBML content)
	$(call merge_html,libsbml-java-math.html,$(java-manual)/libsbml-java-math.html,facilities for manipulating mathematical expressions)
	$(call merge_html,libsbml-issues.html,$(java-manual)/libsbml-issues.html,known issues and pitfalls)
	$(call merge_html,libsbml-uninstallation.html,$(java-manual)/libsbml-uninstallation.html,uninstallation)
	$(call merge_html,../../LICENSE.html,$(java-manual)/libsbml-license.html,license)
	$(call merge_html_verb,../../NEWS.txt,$(java-manual)/libsbml-news.html,news)

endif


# -----------------------------------------------------------------------------
# Miscellaneous helpers.
# -----------------------------------------------------------------------------

$(pdffiles): %.pdf: %.eps
	epstopdf $<


# -----------------------------------------------------------------------------
# Installation.
# -----------------------------------------------------------------------------

# This needs a special version of install-docs, because the source pathnames
# have ../formatted in them and we need to strip that out when copying to
# the destination directory.

install install-docs: $(docs)
	if test -z '$(docs)'; then \
	  echo 'Nothing to be done for install-docs'; \
	else \
	  list='$(docs)'; for docdir in $$list; do \
	    if test -d $$docdir; then d=.; else d=$(srcdir); fi; \
	    dirname=`basename "$$docdir"`; \
	    if test "$$dirname" != "$$docdir" && test "$$dirname" != "."; then \
	      $(MKINSTALLDIRS) "$(DESTDIR)$(DOCDIR)/$$dirname"; \
	    fi; \
	    echo Copying to $(DESTDIR)$(DOCDIR)/$$dirname; \
	    if test -d $$d/$$docdir; then \
	      if test -d $(srcdir)/$$docdir && test $$d != $(srcdir); then \
	        cp -pR $(srcdir)/$$docdir $(DESTDIR)$(DOCDIR) || exit 1; \
	      else \
	        cp -pR $$d/$$docdir $(DESTDIR)$(DOCDIR) || exit 1; \
	      fi; \
	    else \
	      test -f $(DESTDIR)$(DOCDIR)/$$docdir \
	      || cp -p $$d/$$docdir $(DESTDIR)$(DOCDIR)/$$dirname \
	      || exit 1; \
	    fi; \
	  done; \
	fi

uninstall:

installcheck:


# -----------------------------------------------------------------------------
# Creating distribution (for libSBML maintainers only)
# -----------------------------------------------------------------------------

#dist: dist-normal $(docs) # 2007-06-05 going to distribute docs separately.
dist: dist-normal

distcheck:


# -----------------------------------------------------------------------------
# Common default rules.
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


# -----------------------------------------------------------------------------
# End.
# -----------------------------------------------------------------------------

# No longer used:

#preformatted_files     = java.txt python.txt
#generated_manual_files = libsbml-manual libsbml-manual.pdf
#generated_apiref_files = libsbml-api-ref.pdf
#all_generated_files    = $(generated_manual_files) $(generated_apiref_files) 
#all_doc_files          = $(all_generated_files) $(preformatted_files)

#docs                   = $(foreach d,$(all_doc_files),$(formatted)/$d)


#api-tex-files := $(wildcard api/*.tex)

#api/.timestamp:
#	$(SHELL) createAPISections.sh ../../src/sbml
#	echo `date` > api/.timestamp

#$(formatted)/libsbml-api-ref.pdf libsbml-api-ref.pdf: libsbml-api-ref.tex \
#  api/.timestamp $(api-tex-files)
#	-@/bin/rm -f libsbml-api-ref.toc libsbml-api-ref.aux
#	$(latex-env) pdflatex libsbml-api-ref
#	$(latex-env) bibtex libsbml-api-ref
#	$(latex-env) pdflatex libsbml-api-ref
#	$(latex-env) pdflatex libsbml-api-ref
#	$(latex-env) pdflatex libsbml-api-ref
#	cp -f libsbml-api-ref.pdf $(formatted)

#$(formatted)/libsbml-api-ref.dvi: libsbml-api-ref.tex \
#  api/.timestamp $(api-tex-files)
#	-@/bin/rm -f libsbml-api-ref.toc libsbml-api-ref.aux
#	$(latex-env) latex libsbml-api-ref
#	$(latex-env) bibtex libsbml-api-ref
#	$(latex-env) latex libsbml-api-ref
#	$(latex-env) latex libsbml-api-ref
#	$(latex-env) latex libsbml-api-ref
#	cp -f libsbml-api-ref.dvi $(formatted)

#$(formatted)/libsbml-api-ref.ps libsbml-api-ref.ps:  $(formatted)/libsbml-api-ref.dvi
#	$(latex-env) dvips -o libsbml-api-ref.ps libsbml-api-ref
#	cp -f libsbml-api-ref.ps $(formatted)

# doxygen-output-dir = libsbml-api-ref

# $(formatted)/libsbml-api-ref libsbml-api-ref: Doxyfile $(wildcard ../../src/*/*.[cpp,h])
#	$(shell [ -d $(doxygen-output-dir) ] || mkdir $(doxygen-output-dir))
#	doxygen Doxyfile
#	cp -rf tabs.css $(doxygen-output-dir)
#	cp graphics/sbml-logo-long-124x56.gif $(doxygen-output-dir)
#	cp libsbml-api-ref.html.tmpl libsbml-api-ref.html
#	cp -rf libsbml-api-ref $(formatted)

## -----------------------------------------------------------------------------
## libsbml-manual
## -----------------------------------------------------------------------------

#manual_html_dir = libsbml-manual

#epsfiles        = $(wildcard graphics/*.eps)
#pdffiles        = $(epsfiles:.eps=.pdf)

#latex-env := TEXINPUTS=".:tex//:../tex//:${TEXINPUTS}::" 

## Check that these files are up-to-date w.r.t. libsbml's version number.
## This helps catch the situation where a person does a CVS update and
## the version number changes, but the person doesn't remember to do a
## reconfigure.

#tex/libsbmlextras.sty: $(TOP_SRCDIR)/VERSION.txt $(TOP_SRCDIR)/FUNDING.txt
#	cd $(TOP_BUILDDIR) && \
#	    $(SHELL) ./config.status $(thisdir)/tex/libsbmlextras.sty

## Yes, run pdflatex 4 times after running bibtex here.

#manual $(formatted)/libsbml-manual.pdf libsbml-manual.pdf: libsbml-manual.tex $(pdffiles)
#	-@/bin/rm -f libsbml-manual.toc libsbml-manual.aux
#	$(latex-env) pdflatex libsbml-manual
#	$(latex-env) bibtex libsbml-manual
#	$(latex-env) pdflatex libsbml-manual
#	$(latex-env) pdflatex libsbml-manual
#	$(latex-env) pdflatex libsbml-manual
#	cp -f libsbml-manual.pdf $(formatted)

#$(formatted)/libsbml-manual.dvi: libsbml-manual.tex $(epsfiles)
#	-@/bin/rm -f libsbml-manual.toc libsbml-manual.aux
#	$(latex-env) latex libsbml-manual
#	$(latex-env) bibtex libsbml-manual
#	$(latex-env) latex libsbml-manual
#	$(latex-env) latex libsbml-manual
#	$(latex-env) latex libsbml-manual
#	cp -f libsbml-manual.dvi $(formatted)

#$(formatted)/libsbml-manual.ps libsbml-manual.ps: $(formatted)/libsbml-manual.dvi
#	$(latex-env) dvips -o libsbml-manual.ps libsbml-manual
#	cp -f libsbml-manual.ps $(formatted)

## latex2html wants a .aux file

#$(formatted)/libsbml-manual libsbml-manual: libsbml-manual.tex $(formatted)/libsbml-manual.pdf
#	@test -L ./sbmlmanual.perl || ln -s tex/sbmlmanual.perl
#	@test -L ./libsbmlextras.perl || ln -s tex/libsbmlextras.perl
#	$(latex-env) latex2html -white -split +0 -show_section_numbers \
#		   -image_type gif -no_navigation -local_icons -discard \
#		   -antialias -t "libSBML $(PACKAGE_VERSION) Developer's Manual" \
#		   -mkdir -dir $(manual_html_dir) libsbml-manual
#	rm $(manual_html_dir)/index.html
#	cp -f libsbml-manual.css $(manual_html_dir)
#	cp tex/logos/sbml-logo-300x48.jpg $(manual_html_dir)
#	cd $(manual_html_dir) && ln -sf libsbml-manual.html index.html
#	perl -pi -e "s/<TITLE>Contents<\/TITLE>/<TITLE>libSBML Developer's Manual<\/TITLE>/" \
#		$(manual_html_dir)/libsbml-manual.html
#	cp -rf libsbml-manual $(formatted)

##		   -init_file libsbml-manual.init \
##	ln -s libsbml-manual.html $(manual_html_dir)/index.html
##	ln -sf $(manual_html_dir)/libsbml-manual.html
##	perl -pi -e "s|</HEAD>|</HEAD>\n<BASE HREF=\"libsbml-manual/\">|" \
##		$(manual_html_dir)/libsbml-manual.html
