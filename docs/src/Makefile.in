## @configure_input@
##
## File name   : Makefile.in
## Description : Makefile for libSBML documentation
## Author(s)   : Michael Hucka <mhucka@caltech.edu>
## Organization: CDS, Caltech
## Language    : Make
## Created     : 2000-10-17
## Revision    : Makefile,v 1.1.1.1 2002/12/05 23:59:38 mhucka Exp
##
## Copyright 2003-2004 California Institute of Technology and
## Japan Science and Technology Corporation.
##
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published
## by the Free Software Foundation; either version 2.1 of the License, or
## any later version.
##
## This library is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF
## MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and
## documentation provided hereunder is on an "as is" basis, and the
## California Institute of Technology and Japan Science and Technology
## Corporation have no obligations to provide maintenance, support,
## updates, enhancements or modifications.  In no event shall the
## California Institute of Technology or the Japan Science and Technology
## Corporation be liable to any party for direct, indirect, special,
## incidental or consequential damages, including lost profits, arising
## out of the use of this software and its documentation, even if the
## California Institute of Technology and/or Japan Science and Technology
## Corporation have been advised of the possibility of such damage.  See
## the GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with this library; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
##
## The original code contained here was initially developed by:
##
##     Michael Hucka and Ben Bornstein
##     SBML Team
##     Control and Dynamical Systems, MC 107-81
##     California Institute of Technology
##     Pasadena, CA, 91125, USA
##
##     http://www.sbml.org
##     mailto:sbml-team@caltech.edu
##
## Contributor(s):
##


# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under srcdir.  Don't 
# set `subdir' to an absolute path, or some `make' actions will fail.

srcdir  = @srcdir@
thisdir = docs/src

# In order to be able to create distributions with ready-to-read docs, we
# have a separate directory for formatted docs.  This creates a different
# situation than the case of other make rules in libsbml, because here the
# results of the build are copied into a different directory.  

formatted              = ../formatted

preformatted_files     = java.txt python.txt
generated_manual_files = libsbml-manual libsbml-manual.dvi libsbml-manual.pdf
generated_apiref_files = libsbml-api-ref.dvi libsbml-api-ref.pdf
all_generated_files    = $(generated_manual_files) $(generated_apiref_files) 
all_doc_files          = $(all_generated_files) $(preformatted_files)

docs                   = $(foreach d,$(all_doc_files),$(formatted)/$d)

# The variable `extra_clean' is used in `makefile-common-actions.mk'
# for `make dist'.  Normally you wouldn't want to remove documentation
# files, but the following are all generated files and directories.

tex_clean = aux bbl blg log out toc

extra_clean = \
	$(docs) \
	$(api-tex-files) \
	$(addprefix libsbml-manual.,$(tex_clean)) \
	$(addprefix libsbml-api-ref.,$(tex_clean)) 

extra_distclean = \
	$(all_generated_files) \
	libsbml-manual.ps \
	$(formatted)/libsbml-manual.ps \
	libsbml-api-ref.ps \
	$(formatted)/libsbml-api-ref.ps \
	Doxyfile \
	sbmlmanual.perl \
	libsbmlextras.perl

# The `make dist' rules for this directory are more complicated than usual.
# There are additional separate rules below.

distfiles =                            \
        Doxyfile.in                    \
        Doxygen-html-footer.html       \
        Doxygen.css                    \
        Makefile.in                    \
        createAPISection.py            \
        createAPISections.sh           \
	java.txt                       \
	python.txt                     \
        graphics                       \
        libsbml-api-ref.html.tmpl      \
        libsbml-api-ref.tex            \
	libsbml-api-ref.c              \
        libsbml-manual.tex             \
        libsbml-manual.css             \
        libsbml.bib                    \
        tex/alltt.sty                  \
        tex/booktabs/booktabs.dtx      \
        tex/booktabs/booktabs.readme   \
        tex/booktabs/booktabs.sty      \
        tex/caption.sty                \
        tex/fancyheadings.sty          \
        tex/fancyvrb.sty               \
        tex/html.sty                   \
        tex/libsbmlextras.perl         \
        tex/libsbmlextras.sty.in       \
        tex/listings/listings-1.3.dtx  \
        tex/listings/listings-1.3.ins  \
        tex/listings/listings-1.3.pdf  \
        tex/listings/listings.sty      \
        tex/listings/listings.cfg      \
        tex/listings/lstdoc.sty        \
        tex/listings/lstdrvrs-1.3.dtx  \
        tex/listings/lstdrvrs.ins      \
        tex/listings/lstlang1.sty      \
        tex/listings/lstlang2.sty      \
        tex/listings/lstlang3.sty      \
        tex/listings/lstmisc.sty       \
        tex/listings/lstpatch.sty      \
        tex/listings/README            \
        tex/listings/README.SBML       \
        tex/logos/sbml-logo-340x54.jpg \
        tex/logos/sbml-logo-300x48.jpg \
        tex/logos/sbml-logo-compat.eps \
        tex/logos/sbml-logo.eps        \
        tex/logos/sbml-logo.jpg        \
        tex/logos/sbml-logo.pdf        \
        tex/logos/sbml-logo.tif        \
        tex/sbmlmanual.cls             \
        tex/sbmlmanual.perl            \
        tex/sbmlmanual.README          \
        tex/varioref.sty               \
	tex/wrapfig.sty


# -----------------------------------------------------------------------------
# Primary build actions
# -----------------------------------------------------------------------------

# The default rules in `makefile-common-actions.mk' know to interpret goals
# of the form `foo-recursive' to run 'make foo' in directories defined in
# variable `subdirs'.

all docs: Makefile $(docs)

dvi: $(formatted)/libsbml-manual.dvi $(formatted)/libsbml-api-ref.dvi

pdf: $(formatted)/libsbml-manual.pdf $(formatted)/libsbml-api-ref.pdf

ps: $(formatted)/libsbml-manual.ps $(formatted)/libsbml-api-ref.ps

html: $(formatted)/libsbml-manual

info:
	@echo "We're sorry, but the info format is not supported."


# -----------------------------------------------------------------------------
# Checking.
# -----------------------------------------------------------------------------

ifdef USE_LIBCHECK
  check: all run-checks
else
  check:; @echo Please first rerun 'configure' with the --with-check flag; exit 1
endif


# -----------------------------------------------------------------------------
# libsbml-manual
# -----------------------------------------------------------------------------

manual_html_dir = libsbml-manual

epsfiles        = $(wildcard graphics/*.eps)
pdffiles        = $(epsfiles:.eps=.pdf)

latex-env := TEXINPUTS=".:tex//:../tex//:${TEXINPUTS}::" 

# Check that these files are up-to-date w.r.t. libsbml's version number.
# This helps catch the situation where a person does a CVS update and
# the version number changes, but the person doesn't remember to do a
# reconfigure.

tex/libsbmlextras.sty: $(TOP_SRCDIR)/VERSION.txt $(TOP_SRCDIR)/FUNDING.txt
	cd $(TOP_BUILDDIR) && \
	    $(SHELL) ./config.status $(thisdir)/tex/libsbmlextras.sty

Doxyfile: $(TOP_SRCDIR)/VERSION.txt Doxyfile.in
	cd $(TOP_BUILDDIR) && $(SHELL) ./config.status $(thisdir)/Doxyfile

# Yes, run pdflatex 4 times after running bibtex here.

manual $(formatted)/libsbml-manual.pdf libsbml-manual.pdf: libsbml-manual.tex $(pdffiles)
	-@/bin/rm -f libsbml-manual.toc libsbml-manual.aux
	$(latex-env) pdflatex libsbml-manual
	$(latex-env) bibtex libsbml-manual
	$(latex-env) pdflatex libsbml-manual
	$(latex-env) pdflatex libsbml-manual
	$(latex-env) pdflatex libsbml-manual
	$(latex-env) pdflatex libsbml-manual
	cp -f libsbml-manual.pdf $(formatted)

$(formatted)/libsbml-manual.dvi: libsbml-manual.tex $(epsfiles)
	-@/bin/rm -f libsbml-manual.toc libsbml-manual.aux
	$(latex-env) latex libsbml-manual
	$(latex-env) bibtex libsbml-manual
	$(latex-env) latex libsbml-manual
	$(latex-env) latex libsbml-manual
	$(latex-env) latex libsbml-manual
	cp -f libsbml-manual.dvi $(formatted)

$(formatted)/libsbml-manual.ps libsbml-manual.ps: $(formatted)/libsbml-manual.dvi
	$(latex-env) dvips -o libsbml-manual.ps libsbml-manual
	cp -f libsbml-manual.ps $(formatted)

$(formatted)/libsbml-manual libsbml-manual: libsbml-manual.tex $(formatted)/libsbml-manual.dvi
	@test -L ./sbmlmanual.perl || ln -s tex/sbmlmanual.perl
	@test -L ./libsbmlextras.perl || ln -s tex/libsbmlextras.perl
	$(latex-env) latex2html -white -split +0 -show_section_numbers \
		   -image_type gif -no_navigation -local_icons -discard \
		   -antialias -t "libSBML $(PACKAGE_VERSION) Developer's Manual" \
		   -mkdir -dir $(manual_html_dir) libsbml-manual
	rm $(manual_html_dir)/index.html
	cp -f libsbml-manual.css $(manual_html_dir)
	cp tex/logos/sbml-logo-300x48.jpg $(manual_html_dir)
	cd $(manual_html_dir) && ln -sf libsbml-manual.html index.html
	perl -pi -e "s/<TITLE>Contents<\/TITLE>/<TITLE>libSBML Developer's Manual<\/TITLE>/" \
		$(manual_html_dir)/libsbml-manual.html
	cp -rf libsbml-manual $(formatted)

#		   -init_file libsbml-manual.init \
#	ln -s libsbml-manual.html $(manual_html_dir)/index.html
#	ln -sf $(manual_html_dir)/libsbml-manual.html
#	perl -pi -e "s|</HEAD>|</HEAD>\n<BASE HREF=\"libsbml-manual/\">|" \
#		$(manual_html_dir)/libsbml-manual.html


# -----------------------------------------------------------------------------
# libsbml-api-ref
# -----------------------------------------------------------------------------

api-tex-files = $(wildcard api/*.tex)

create-api-files = { $(SHELL) createAPISections.sh ../../src/sbml; }

api-ref $(formatted)/libsbml-api-ref.pdf libsbml-api-ref.pdf:  libsbml-api-ref.tex
ifeq "$(api-tex-files)" ""
	$(create-api-files)
endif
	-@/bin/rm -f libsbml-api-ref.toc libsbml-api-ref.aux
	$(latex-env) pdflatex libsbml-api-ref
	$(latex-env) bibtex libsbml-api-ref
	$(latex-env) pdflatex libsbml-api-ref
	$(latex-env) pdflatex libsbml-api-ref
	$(latex-env) pdflatex libsbml-api-ref
	$(latex-env) pdflatex libsbml-api-ref
	cp -f libsbml-api-ref.pdf $(formatted)

$(formatted)/libsbml-api-ref.dvi: libsbml-api-ref.tex
ifeq "$(api-tex-files)" ""
	$(create-api-files)
endif
	-@/bin/rm -f libsbml-api-ref.toc libsbml-api-ref.aux
	$(latex-env) latex libsbml-api-ref
	$(latex-env) bibtex libsbml-api-ref
	$(latex-env) latex libsbml-api-ref
	$(latex-env) latex libsbml-api-ref
	$(latex-env) latex libsbml-api-ref
	cp -f libsbml-api-ref.dvi $(formatted)

$(formatted)/libsbml-api-ref.ps libsbml-api-ref.ps:  $(formatted)/libsbml-api-ref.dvi
	$(latex-env) dvips -o libsbml-api-ref.ps libsbml-api-ref
	cp -f libsbml-api-ref.ps $(formatted)

doxygen-output-dir = libsbml-api-ref

$(formatted)/libsbml-api-ref libsbml-api-ref: Doxyfile $(wildcard ../../src/*.[cpp,hpp])
	$(shell [ -d $(doxygen-output-dir) ] || mkdir $(doxygen-output-dir))
	doxygen Doxyfile
	cp graphics/sbml-logo-long-124x56.gif $(doxygen-output-dir)
	cp libsbml-api-ref.html.tmpl libsbml-api-ref.html
	cp -rf libsbml-api-ref $(formatted)


# -----------------------------------------------------------------------------
# Preformatted files.
# -----------------------------------------------------------------------------

$(formatted)/java.txt: java.txt
	cp -f java.txt $(formatted)

$(formatted)/python.txt: python.txt
	cp -f python.txt $(formatted)


# -----------------------------------------------------------------------------
# Miscellaneous helpers.
# -----------------------------------------------------------------------------

$(pdffiles): %.pdf: %.eps
	epstopdf $<


# -----------------------------------------------------------------------------
# Installation.
# -----------------------------------------------------------------------------

# This needs a special version of install-docs, because the source pathnames
# have ../formatted in them and we need to strip that out when copying to
# the destination directory.

install: $(docs)
	@if test -z '$(docs)'; then \
	  echo 'Nothing to be done for install-docs'; \
	else \
	  list='$(docs)'; for file in $$list; do \
	    if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	    dir=`echo "$$file" | sed -e 's,$(formatted),,'`; \
	    dir=`echo "$$dir" | sed -e 's,/[^/]*$$,,'`; \
	    if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	      dir="$$dir"; \
	      $(MKINSTALLDIRS) "$(DOCDIR)/$$dir"; \
	    else \
	      dir=''; \
	    fi; \
	    if test -d $$d/$$file; then \
	      if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	        echo Copying $(srcdir)/$$file; \
	        cp -pR $(srcdir)/$$file $(DOCDIR)$$dir || exit 1; \
	      fi; \
	      cp -pR $$d/$$file $(DOCDIR)$$dir || exit 1; \
	    else \
	      echo Copying $(DOCDIR)/$$file; \
	      test -f $(DOCDIR)/$$file \
	      || cp -p $$d/$$file $(DOCDIR)/$$dir \
	      || exit 1; \
	    fi; \
	  done; \
	fi

uninstall:

installcheck:


# -----------------------------------------------------------------------------
# Creating distribution (for libSBML maintainers only)
# -----------------------------------------------------------------------------

dist: dist-normal $(docs)

distcheck:


# -----------------------------------------------------------------------------
# Common default rules.
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


# -----------------------------------------------------------------------------
# End.
# -----------------------------------------------------------------------------
