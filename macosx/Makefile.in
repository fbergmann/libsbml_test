## @configure_input@
##
## Filename    : Makefile.in
## Description : Makefile for libSBML macosx subdiretory
## Author(s)   : SBML Team <sbml-team@caltech.edu>
## Organization: California Institute of Technology
## Created     : 2009-05-01
## Revision    : $Id$
## $HeadURL$
##
##<!---------------------------------------------------------------------------
## This file is part of libSBML.  Please visit http://sbml.org for more
## information about SBML, and the latest version of libSBML.
##
## Copyright 2005-2010 California Institute of Technology.
## Copyright 2002-2005 California Institute of Technology and
##                     Japan Science and Technology Corporation.
## 
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation.  A copy of the license agreement is provided
## in the file named "LICENSE.txt" included with this software distribution
## and also available online as http://sbml.org/software/libsbml/license.html
##----------------------------------------------------------------------- -->*/


# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under srcdir.  Don't 
# set `subdir' to an absolute path, or some `make' actions will fail.

srcdir  = @srcdir@
thisdir = macosx

# Variables `subdirs', `headers', `sources', `libraries', `extra_CPPFLAGS',
# `extra_CXXFLAGS', `extra_LDFLAGS' and `distfiles' are used by the default
# rules in `makefile-common-actions.mk' included at the end.

subdirs = 

distfiles = \
  Makefile.in                                        \
  build.sh.in                                        \
  uninstall-libsbml-pkg.sh                           \
  libSBML.pkg/Contents/Info.plist.in                 \
  libSBML.pkg/Contents/PkgInfo                       \
  libSBML.pkg/Contents/Resources/en.lproj            \
  libSBML.pkg/Contents/Resources/en.lproj/background \
  libSBML.pkg/Contents/Resources/en.lproj/License    \
  libSBML.pkg/Contents/Resources/en.lproj/Welcome    \
  libSBML.pkg/Contents/Resources/package_version.in  

# -----------------------------------------------------------------------------
# Primary build actions
# -----------------------------------------------------------------------------

# The default rules in `makefile-common-actions.mk' know to interpret goals
# of the form `foo-recursive' to run 'make foo' in directories defined in
# variable `subdirs'.

all:

# -----------------------------------------------------------------------------
# Create a package (.dmg file) for MacOSX
#
# (NOTES)
#
# Executing "make create-dmg" will create 
# libsbml-${VERSION}-${XML_PARSER}_macosx-installer.dmg
# in the top directory of source tree.
#
# Install prefix, underlying XML parser (expat, libxml2, or xerces), language 
# bindings and etc. are determined by options passed to the configure script.
#
# For example, a created package will install libSBML (depends on expat) as
# universal binaries (i386 and ppc) in /usr/local/ directory (default path) 
# with Java and Python bindings if the configure script is run as follows:
#
#  ./configure --with-expat --enable-universal-binary --with-java --with-python
#
# -----------------------------------------------------------------------------

apath_thisdir = $(top_srcdir)/$(thisdir)
archive_basename = $(shell basename $(DISTDIR))
PKGDIST = root
PKGBASE = libSBML.pkg

create-dmg: clean-pkg
	-mkdir $(apath_thisdir)/root/ 
	-mkdir -p $(apath_thisdir)/root$(prefix)/bin
	cd $(top_srcdir) \
	$(MAKE) \
	&& $(MAKE) install DESTDIR=$(apath_thisdir)/root \
	&& cp $(apath_thisdir)/uninstall-libsbml-pkg.sh $(apath_thisdir)/root$(prefix)/bin/ \
	&& $(apath_thisdir)/build.sh 

clean-pkg:
	-rm -rf $(top_srcdir)/${thisdir}/${PKGDIST}/
	-rm -rf $(top_srcdir)/${thisdir}/${PKGBASE}/Contents/Archive.bom
	-rm -rf $(top_srcdir)/${thisdir}/${PKGBASE}/Contents/Archive.pax.gz



# -----------------------------------------------------------------------------
# Checking.
# -----------------------------------------------------------------------------

check:


# -----------------------------------------------------------------------------
# Tags.
# -----------------------------------------------------------------------------

# Nothing to be done for tags right now.  We could actually use tags for
# the LaTeX files -- should we?  Nobody seems to care for it right now.

tags:


# -----------------------------------------------------------------------------
# Installation.
# -----------------------------------------------------------------------------

install:

install-docs: install-docs-recursive

uninstall: uninstall-recursive 

installcheck: installcheck-recursive


# -----------------------------------------------------------------------------
# Cleaning.
# -----------------------------------------------------------------------------

clean: clean-pkg clean-recursive

distclean: distclean-recursive

mostlyclean: mostlyclean-recursive

maintainer-clean: maintainer-clean-recursive


# -----------------------------------------------------------------------------
# Creating distribution (for libSBML maintainers only)
# -----------------------------------------------------------------------------

dist: dist-recursive dist-normal

distcheck: distcheck-recursive distcheck-normal


# -----------------------------------------------------------------------------
# Common default rules.
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


# -----------------------------------------------------------------------------
# End.
# -----------------------------------------------------------------------------
