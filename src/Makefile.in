# Makefile.in generated by automake 1.7.2 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AM_CPPFLAGS = @AM_CPPFLAGS@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBCHECK_ENABLED_FALSE = @LIBCHECK_ENABLED_FALSE@
LIBCHECK_ENABLED_TRUE = @LIBCHECK_ENABLED_TRUE@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TestDataDirectory = @TestDataDirectory@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

lib_LTLIBRARIES = libsbml.la
libsbml_la_LDFLAGS = -no-undefined -version-info 2:2:1

nobase_include_HEADERS = \
  sbml/AlgebraicRule.h            \
  sbml/AssignmentRule.h           \
  sbml/ASTNode.h                  \
  sbml/Compartment.h              \
  sbml/CompartmentVolumeRule.h    \
  sbml/Event.h                    \
  sbml/EventAssignment.h          \
  sbml/FormulaFormatter.h         \
  sbml/FormulaParser.h            \
  sbml/FormulaTokenizer.h         \
  sbml/FunctionDefinition.h       \
  sbml/KineticLaw.h               \
  sbml/List.h                     \
  sbml/ListOf.h                   \
  sbml/MathMLDocument.h           \
  sbml/MathMLReader.h             \
  sbml/Model.h                    \
  sbml/ModifierSpeciesReference.h \
  sbml/Parameter.h                \
  sbml/ParameterRule.h            \
  sbml/ParseMessage.h             \
  sbml/RateRule.h                 \
  sbml/Reaction.h                 \
  sbml/Rule.h                     \
  sbml/RuleType.h                 \
  sbml/SBase.h                    \
  sbml/SBMLDocument.h             \
  sbml/SBMLReader.h               \
  sbml/SBMLTypeCodes.h            \
  sbml/SBMLTypes.h                \
  sbml/SBMLWriter.h               \
  sbml/SimpleSpeciesReference.h   \
  sbml/Species.h                  \
  sbml/SpeciesConcentrationRule.h \
  sbml/SpeciesReference.h         \
  sbml/Stack.h                    \
  sbml/StringBuffer.h             \
  sbml/UnitDefinition.h           \
  sbml/Unit.h                     \
  sbml/UnitKind.h                 \
  sbml/common.h                   \
  sbml/config.h                   \
  sbml/memory.h                   \
  sbml/util.h


libsbml_la_SOURCES = \
  sbml/common.hpp                 \
  sbml/MathMLHandler.hpp          \
  sbml/MathMLTagCodes.hpp         \
  sbml/MathMLUnicodeConstants.hpp \
  sbml/SBMLFormatter.hpp          \
  sbml/SBMLHandler.hpp            \
  sbml/SBMLTagCodes.hpp           \
  sbml/SBMLUnicodeConstants.hpp   \
  sbml/XMLStringFormatter.hpp     \
  sbml/XMLUtil.hpp                \
  MathMLDocument.c                \
  MathMLHandler.cpp               \
  MathMLReader.cpp                \
  MathMLTagCodes.cpp              \
  SBMLFormatter.cpp               \
  SBMLHandler.cpp                 \
  SBMLReader.cpp                  \
  SBMLTagCodes.cpp                \
  SBMLWriter.cpp                  \
  XMLStringFormatter.cpp          \
  XMLUtil.cpp                     \
  AlgebraicRule.c                 \
  AssignmentRule.c                \
  ASTNode.c                       \
  Compartment.c                   \
  CompartmentVolumeRule.c         \
  Event.c                         \
  EventAssignment.c               \
  FormulaFormatter.c              \
  FormulaParser.c                 \
  FormulaTokenizer.c              \
  FunctionDefinition.c            \
  KineticLaw.c                    \
  List.c                          \
  ListOf.c                        \
  Model.c                         \
  ModifierSpeciesReference.c      \
  Parameter.c                     \
  ParameterRule.c                 \
  ParseMessage.c                  \
  RateRule.c                      \
  Reaction.c                      \
  Rule.c                          \
  RuleType.c                      \
  SBase.c                         \
  SBMLDocument.c                  \
  SimpleSpeciesReference.c        \
  Species.c                       \
  SpeciesConcentrationRule.c      \
  SpeciesReference.c              \
  Stack.c                         \
  StringBuffer.c                  \
  Unit.c                          \
  UnitDefinition.c                \
  UnitKind.c                      \
  memory.c                        \
  util.c


@LIBCHECK_ENABLED_TRUE@TestRunner_SOURCES = \
@LIBCHECK_ENABLED_TRUE@  test-data                       \
@LIBCHECK_ENABLED_TRUE@  sbml/SAX2AttributesMock.hpp     \
@LIBCHECK_ENABLED_TRUE@  SAX2AttributesMock.cpp          \
@LIBCHECK_ENABLED_TRUE@  TestMathMLHandler.cpp           \
@LIBCHECK_ENABLED_TRUE@  TestSAX2AttributesMock.cpp      \
@LIBCHECK_ENABLED_TRUE@  TestSBMLFormatter.cpp           \
@LIBCHECK_ENABLED_TRUE@  TestSBMLHandler.cpp             \
@LIBCHECK_ENABLED_TRUE@  TestXMLStringFormatter.cpp      \
@LIBCHECK_ENABLED_TRUE@  TestXMLUtil.cpp                 \
@LIBCHECK_ENABLED_TRUE@  TestAlgebraicRule.c             \
@LIBCHECK_ENABLED_TRUE@  TestAssignmentRule.c            \
@LIBCHECK_ENABLED_TRUE@  TestASTNode.c                   \
@LIBCHECK_ENABLED_TRUE@  TestCompartment.c               \
@LIBCHECK_ENABLED_TRUE@  TestCompartmentVolumeRule.c     \
@LIBCHECK_ENABLED_TRUE@  TestEvent.c                     \
@LIBCHECK_ENABLED_TRUE@  TestEventAssignment.c           \
@LIBCHECK_ENABLED_TRUE@  TestFormulaFormatter.c          \
@LIBCHECK_ENABLED_TRUE@  TestFormulaParser.c             \
@LIBCHECK_ENABLED_TRUE@  TestFormulaTokenizer.c          \
@LIBCHECK_ENABLED_TRUE@  TestFunctionDefinition.c        \
@LIBCHECK_ENABLED_TRUE@  TestKineticLaw.c                \
@LIBCHECK_ENABLED_TRUE@  TestList.c                      \
@LIBCHECK_ENABLED_TRUE@  TestListOf.c                    \
@LIBCHECK_ENABLED_TRUE@  TestMathMLDocument.c            \
@LIBCHECK_ENABLED_TRUE@  TestMemory.c                    \
@LIBCHECK_ENABLED_TRUE@  TestModel.c                     \
@LIBCHECK_ENABLED_TRUE@  TestModifierSpeciesReference.c  \
@LIBCHECK_ENABLED_TRUE@  TestParameter.c                 \
@LIBCHECK_ENABLED_TRUE@  TestParameterRule.c             \
@LIBCHECK_ENABLED_TRUE@  TestParseMessage.c              \
@LIBCHECK_ENABLED_TRUE@  TestRateRule.c                  \
@LIBCHECK_ENABLED_TRUE@  TestReaction.c                  \
@LIBCHECK_ENABLED_TRUE@  TestRule.c                      \
@LIBCHECK_ENABLED_TRUE@  TestRuleType.c                  \
@LIBCHECK_ENABLED_TRUE@  TestSBase.c                     \
@LIBCHECK_ENABLED_TRUE@  TestSBMLDocument.c              \
@LIBCHECK_ENABLED_TRUE@  TestSBMLReader.c                \
@LIBCHECK_ENABLED_TRUE@  TestSBMLWriter.c                \
@LIBCHECK_ENABLED_TRUE@  TestSimpleSpeciesReference.c    \
@LIBCHECK_ENABLED_TRUE@  TestSpecies.c                   \
@LIBCHECK_ENABLED_TRUE@  TestSpeciesConcentrationRule.c  \
@LIBCHECK_ENABLED_TRUE@  TestSpeciesReference.c          \
@LIBCHECK_ENABLED_TRUE@  TestStack.c                     \
@LIBCHECK_ENABLED_TRUE@  TestStringBuffer.c              \
@LIBCHECK_ENABLED_TRUE@  TestReadFromFile1.c             \
@LIBCHECK_ENABLED_TRUE@  TestReadFromFile2.c             \
@LIBCHECK_ENABLED_TRUE@  TestReadFromFile3.c             \
@LIBCHECK_ENABLED_TRUE@  TestReadFromFile4.c             \
@LIBCHECK_ENABLED_TRUE@  TestRunner.c                    \
@LIBCHECK_ENABLED_TRUE@  TestUnitDefinition.c            \
@LIBCHECK_ENABLED_TRUE@  TestUnitKind.c                  \
@LIBCHECK_ENABLED_TRUE@  TestUnit.c                      \
@LIBCHECK_ENABLED_TRUE@  TestUtil.c


@LIBCHECK_ENABLED_TRUE@TestRunner_LDADD = libsbml.la

@LIBCHECK_ENABLED_TRUE@TESTS = TestRunner
@LIBCHECK_ENABLED_TRUE@check_PROGRAMS = TestRunner
@LIBCHECK_ENABLED_TRUE@check_DATA = test-data
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/sbml/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libsbml_la_LIBADD =
am_libsbml_la_OBJECTS = MathMLDocument.lo MathMLHandler.lo \
	MathMLReader.lo MathMLTagCodes.lo SBMLFormatter.lo \
	SBMLHandler.lo SBMLReader.lo SBMLTagCodes.lo SBMLWriter.lo \
	XMLStringFormatter.lo XMLUtil.lo AlgebraicRule.lo \
	AssignmentRule.lo ASTNode.lo Compartment.lo \
	CompartmentVolumeRule.lo Event.lo EventAssignment.lo \
	FormulaFormatter.lo FormulaParser.lo FormulaTokenizer.lo \
	FunctionDefinition.lo KineticLaw.lo List.lo ListOf.lo Model.lo \
	ModifierSpeciesReference.lo Parameter.lo ParameterRule.lo \
	ParseMessage.lo RateRule.lo Reaction.lo Rule.lo RuleType.lo \
	SBase.lo SBMLDocument.lo SimpleSpeciesReference.lo Species.lo \
	SpeciesConcentrationRule.lo SpeciesReference.lo Stack.lo \
	StringBuffer.lo Unit.lo UnitDefinition.lo UnitKind.lo memory.lo \
	util.lo
libsbml_la_OBJECTS = $(am_libsbml_la_OBJECTS)
@LIBCHECK_ENABLED_TRUE@check_PROGRAMS = TestRunner$(EXEEXT)
@LIBCHECK_ENABLED_FALSE@check_PROGRAMS =
am__TestRunner_SOURCES_DIST = test-data sbml/SAX2AttributesMock.hpp \
	SAX2AttributesMock.cpp TestMathMLHandler.cpp \
	TestSAX2AttributesMock.cpp TestSBMLFormatter.cpp \
	TestSBMLHandler.cpp TestXMLStringFormatter.cpp TestXMLUtil.cpp \
	TestAlgebraicRule.c TestAssignmentRule.c TestASTNode.c \
	TestCompartment.c TestCompartmentVolumeRule.c TestEvent.c \
	TestEventAssignment.c TestFormulaFormatter.c \
	TestFormulaParser.c TestFormulaTokenizer.c \
	TestFunctionDefinition.c TestKineticLaw.c TestList.c \
	TestListOf.c TestMathMLDocument.c TestMemory.c TestModel.c \
	TestModifierSpeciesReference.c TestParameter.c \
	TestParameterRule.c TestParseMessage.c TestRateRule.c \
	TestReaction.c TestRule.c TestRuleType.c TestSBase.c \
	TestSBMLDocument.c TestSBMLReader.c TestSBMLWriter.c \
	TestSimpleSpeciesReference.c TestSpecies.c \
	TestSpeciesConcentrationRule.c TestSpeciesReference.c \
	TestStack.c TestStringBuffer.c TestReadFromFile1.c \
	TestReadFromFile2.c TestReadFromFile3.c TestReadFromFile4.c \
	TestRunner.c TestUnitDefinition.c TestUnitKind.c TestUnit.c \
	TestUtil.c
@LIBCHECK_ENABLED_TRUE@am_TestRunner_OBJECTS = \
@LIBCHECK_ENABLED_TRUE@	SAX2AttributesMock.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestMathMLHandler.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSAX2AttributesMock.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSBMLFormatter.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSBMLHandler.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestXMLStringFormatter.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestXMLUtil.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestAlgebraicRule.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestAssignmentRule.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestASTNode.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestCompartment.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestCompartmentVolumeRule.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestEvent.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestEventAssignment.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestFormulaFormatter.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestFormulaParser.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestFormulaTokenizer.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestFunctionDefinition.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestKineticLaw.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestList.$(OBJEXT) TestListOf.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestMathMLDocument.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestMemory.$(OBJEXT) TestModel.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestModifierSpeciesReference.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestParameter.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestParameterRule.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestParseMessage.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestRateRule.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestReaction.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestRule.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestRuleType.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSBase.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSBMLDocument.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSBMLReader.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSBMLWriter.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSimpleSpeciesReference.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSpecies.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSpeciesConcentrationRule.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestSpeciesReference.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestStack.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestStringBuffer.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestReadFromFile1.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestReadFromFile2.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestReadFromFile3.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestReadFromFile4.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestRunner.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestUnitDefinition.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestUnitKind.$(OBJEXT) \
@LIBCHECK_ENABLED_TRUE@	TestUnit.$(OBJEXT) TestUtil.$(OBJEXT)
TestRunner_OBJECTS = $(am_TestRunner_OBJECTS)
@LIBCHECK_ENABLED_TRUE@TestRunner_DEPENDENCIES = libsbml.la
@LIBCHECK_ENABLED_FALSE@TestRunner_DEPENDENCIES =
TestRunner_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/src/sbml
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/ASTNode.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/AlgebraicRule.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/AssignmentRule.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Compartment.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/CompartmentVolumeRule.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Event.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/EventAssignment.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FormulaFormatter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FormulaParser.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FormulaTokenizer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FunctionDefinition.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/KineticLaw.Plo ./$(DEPDIR)/List.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ListOf.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MathMLDocument.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MathMLHandler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MathMLReader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MathMLTagCodes.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Model.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ModifierSpeciesReference.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Parameter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ParameterRule.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ParseMessage.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/RateRule.Plo ./$(DEPDIR)/Reaction.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Rule.Plo ./$(DEPDIR)/RuleType.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SAX2AttributesMock.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SBMLDocument.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SBMLFormatter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SBMLHandler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SBMLReader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SBMLTagCodes.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SBMLWriter.Plo ./$(DEPDIR)/SBase.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SimpleSpeciesReference.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Species.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SpeciesConcentrationRule.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SpeciesReference.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Stack.Plo ./$(DEPDIR)/StringBuffer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TestASTNode.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestAlgebraicRule.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestAssignmentRule.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestCompartment.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestCompartmentVolumeRule.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestEvent.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestEventAssignment.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestFormulaFormatter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestFormulaParser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestFormulaTokenizer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestFunctionDefinition.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestKineticLaw.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestList.Po ./$(DEPDIR)/TestListOf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestMathMLDocument.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestMathMLHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestMemory.Po ./$(DEPDIR)/TestModel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestModifierSpeciesReference.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestParameter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestParameterRule.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestParseMessage.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestRateRule.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestReaction.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestReadFromFile1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestReadFromFile2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestReadFromFile3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestReadFromFile4.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestRule.Po ./$(DEPDIR)/TestRuleType.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestRunner.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSAX2AttributesMock.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSBMLDocument.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSBMLFormatter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSBMLHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSBMLReader.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSBMLWriter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSBase.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSimpleSpeciesReference.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSpecies.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSpeciesConcentrationRule.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestSpeciesReference.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestStack.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestStringBuffer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestUnit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestUnitDefinition.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestUnitKind.Po ./$(DEPDIR)/TestUtil.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestXMLStringFormatter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TestXMLUtil.Po ./$(DEPDIR)/Unit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/UnitDefinition.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/UnitKind.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/XMLStringFormatter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/XMLUtil.Plo ./$(DEPDIR)/memory.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/util.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libsbml_la_SOURCES) $(am__TestRunner_SOURCES_DIST)
HEADERS = $(nobase_include_HEADERS)

DIST_COMMON = $(nobase_include_HEADERS) Makefile.am Makefile.in
SOURCES = $(libsbml_la_SOURCES) $(TestRunner_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsbml.la: $(libsbml_la_OBJECTS) $(libsbml_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libsbml_la_LDFLAGS) $(libsbml_la_OBJECTS) $(libsbml_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
TestRunner$(EXEEXT): $(TestRunner_OBJECTS) $(TestRunner_DEPENDENCIES) 
	@rm -f TestRunner$(EXEEXT)
	$(CXXLINK) $(TestRunner_LDFLAGS) $(TestRunner_OBJECTS) $(TestRunner_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ASTNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AlgebraicRule.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AssignmentRule.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Compartment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompartmentVolumeRule.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Event.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EventAssignment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FormulaFormatter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FormulaParser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FormulaTokenizer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FunctionDefinition.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KineticLaw.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/List.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ListOf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MathMLDocument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MathMLHandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MathMLReader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MathMLTagCodes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ModifierSpeciesReference.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Parameter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParameterRule.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParseMessage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RateRule.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Reaction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rule.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RuleType.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SAX2AttributesMock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SBMLDocument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SBMLFormatter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SBMLHandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SBMLReader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SBMLTagCodes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SBMLWriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SBase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleSpeciesReference.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Species.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpeciesConcentrationRule.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpeciesReference.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Stack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StringBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestASTNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestAlgebraicRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestAssignmentRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestCompartment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestCompartmentVolumeRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestEvent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestEventAssignment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestFormulaFormatter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestFormulaParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestFormulaTokenizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestFunctionDefinition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestKineticLaw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestListOf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestMathMLDocument.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestMathMLHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestMemory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestModel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestModifierSpeciesReference.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestParameter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestParameterRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestParseMessage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestRateRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestReaction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestReadFromFile1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestReadFromFile2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestReadFromFile3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestReadFromFile4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestRuleType.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestRunner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSAX2AttributesMock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSBMLDocument.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSBMLFormatter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSBMLHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSBMLReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSBMLWriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSimpleSpeciesReference.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSpecies.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSpeciesConcentrationRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestSpeciesReference.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestStack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestStringBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestUnit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestUnitDefinition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestUnitKind.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestXMLStringFormatter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestXMLUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Unit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnitDefinition.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnitKind.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLStringFormatter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLUtil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/util.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
nobase_includeHEADERS_INSTALL = $(install_sh_DATA)
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="$$p"; \
	  echo " $(nobase_includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f"; \
	  $(nobase_includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  f="$$p"; \
	  echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	  rm -f $(DESTDIR)$(includedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

@LIBCHECK_ENABLED_FALSE@check-TESTS: $(TESTS)
@LIBCHECK_ENABLED_FALSE@	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
@LIBCHECK_ENABLED_FALSE@	srcdir=$(srcdir); export srcdir; \
@LIBCHECK_ENABLED_FALSE@	list='$(TESTS)'; \
@LIBCHECK_ENABLED_FALSE@	if test -n "$$list"; then \
@LIBCHECK_ENABLED_FALSE@	  for tst in $$list; do \
@LIBCHECK_ENABLED_FALSE@	    if test -f ./$$tst; then dir=./; \
@LIBCHECK_ENABLED_FALSE@	    elif test -f $$tst; then dir=; \
@LIBCHECK_ENABLED_FALSE@	    else dir="$(srcdir)/"; fi; \
@LIBCHECK_ENABLED_FALSE@	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
@LIBCHECK_ENABLED_FALSE@	      all=`expr $$all + 1`; \
@LIBCHECK_ENABLED_FALSE@	      case " $(XFAIL_TESTS) " in \
@LIBCHECK_ENABLED_FALSE@	      *" $$tst "*) \
@LIBCHECK_ENABLED_FALSE@	        xpass=`expr $$xpass + 1`; \
@LIBCHECK_ENABLED_FALSE@	        failed=`expr $$failed + 1`; \
@LIBCHECK_ENABLED_FALSE@	        echo "XPASS: $$tst"; \
@LIBCHECK_ENABLED_FALSE@	      ;; \
@LIBCHECK_ENABLED_FALSE@	      *) \
@LIBCHECK_ENABLED_FALSE@	        echo "PASS: $$tst"; \
@LIBCHECK_ENABLED_FALSE@	      ;; \
@LIBCHECK_ENABLED_FALSE@	      esac; \
@LIBCHECK_ENABLED_FALSE@	    elif test $$? -ne 77; then \
@LIBCHECK_ENABLED_FALSE@	      all=`expr $$all + 1`; \
@LIBCHECK_ENABLED_FALSE@	      case " $(XFAIL_TESTS) " in \
@LIBCHECK_ENABLED_FALSE@	      *" $$tst "*) \
@LIBCHECK_ENABLED_FALSE@	        xfail=`expr $$xfail + 1`; \
@LIBCHECK_ENABLED_FALSE@	        echo "XFAIL: $$tst"; \
@LIBCHECK_ENABLED_FALSE@	      ;; \
@LIBCHECK_ENABLED_FALSE@	      *) \
@LIBCHECK_ENABLED_FALSE@	        failed=`expr $$failed + 1`; \
@LIBCHECK_ENABLED_FALSE@	        echo "FAIL: $$tst"; \
@LIBCHECK_ENABLED_FALSE@	      ;; \
@LIBCHECK_ENABLED_FALSE@	      esac; \
@LIBCHECK_ENABLED_FALSE@	    else \
@LIBCHECK_ENABLED_FALSE@	      skip=`expr $$skip + 1`; \
@LIBCHECK_ENABLED_FALSE@	      echo "SKIP: $$tst"; \
@LIBCHECK_ENABLED_FALSE@	    fi; \
@LIBCHECK_ENABLED_FALSE@	  done; \
@LIBCHECK_ENABLED_FALSE@	  if test "$$failed" -eq 0; then \
@LIBCHECK_ENABLED_FALSE@	    if test "$$xfail" -eq 0; then \
@LIBCHECK_ENABLED_FALSE@	      banner="All $$all tests passed"; \
@LIBCHECK_ENABLED_FALSE@	    else \
@LIBCHECK_ENABLED_FALSE@	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
@LIBCHECK_ENABLED_FALSE@	    fi; \
@LIBCHECK_ENABLED_FALSE@	  else \
@LIBCHECK_ENABLED_FALSE@	    if test "$$xpass" -eq 0; then \
@LIBCHECK_ENABLED_FALSE@	      banner="$$failed of $$all tests failed"; \
@LIBCHECK_ENABLED_FALSE@	    else \
@LIBCHECK_ENABLED_FALSE@	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
@LIBCHECK_ENABLED_FALSE@	    fi; \
@LIBCHECK_ENABLED_FALSE@	  fi; \
@LIBCHECK_ENABLED_FALSE@	  dashes="$$banner"; \
@LIBCHECK_ENABLED_FALSE@	  skipped=""; \
@LIBCHECK_ENABLED_FALSE@	  if test "$$skip" -ne 0; then \
@LIBCHECK_ENABLED_FALSE@	    skipped="($$skip tests were not run)"; \
@LIBCHECK_ENABLED_FALSE@	    test `echo "$$skipped" | wc -c` -gt `echo "$$banner" | wc -c` && \
@LIBCHECK_ENABLED_FALSE@	      dashes="$$skipped"; \
@LIBCHECK_ENABLED_FALSE@	  fi; \
@LIBCHECK_ENABLED_FALSE@	  report=""; \
@LIBCHECK_ENABLED_FALSE@	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
@LIBCHECK_ENABLED_FALSE@	    report="Please report to $(PACKAGE_BUGREPORT)"; \
@LIBCHECK_ENABLED_FALSE@	    test `echo "$$report" | wc -c` -gt `echo "$$banner" | wc -c` && \
@LIBCHECK_ENABLED_FALSE@	      dashes="$$report"; \
@LIBCHECK_ENABLED_FALSE@	  fi; \
@LIBCHECK_ENABLED_FALSE@	  dashes=`echo "$$dashes" | sed s/./=/g`; \
@LIBCHECK_ENABLED_FALSE@	  echo "$$dashes"; \
@LIBCHECK_ENABLED_FALSE@	  echo "$$banner"; \
@LIBCHECK_ENABLED_FALSE@	  test -n "$$skipped" && echo "$$skipped"; \
@LIBCHECK_ENABLED_FALSE@	  test -n "$$report" && echo "$$report"; \
@LIBCHECK_ENABLED_FALSE@	  echo "$$dashes"; \
@LIBCHECK_ENABLED_FALSE@	  test "$$failed" -eq 0; \
@LIBCHECK_ENABLED_FALSE@	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/sbml
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_DATA)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(includedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-nobase_includeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nobase_includeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-nobase_includeHEADERS


@LIBCHECK_ENABLED_TRUE@check-TESTS: $(TESTS)
@LIBCHECK_ENABLED_TRUE@	@echo
@LIBCHECK_ENABLED_TRUE@	@echo
@LIBCHECK_ENABLED_TRUE@	@echo Running Tests
@LIBCHECK_ENABLED_TRUE@	@echo -------------
@LIBCHECK_ENABLED_TRUE@	@ srcdir=@TestDataDirectory@; export srcdir; ./TestRunner
@LIBCHECK_ENABLED_TRUE@	@echo
@LIBCHECK_ENABLED_TRUE@	@echo
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
