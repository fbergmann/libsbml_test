## @configure_input@
##
## Filename    : Makefile.in
## Description : Makefile template for libsbml src/sbml directory
## Author(s)   : SBML Team <sbml-team@caltech.edu>
## Organization: California Institute of Technology
## Created     : 2005-03-15
## Revision    : $Id$
## Source      : $Source$
##
## Copyright 2005 California Institute of Technology and
## Japan Science and Technology Corporation.
##
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published
## by the Free Software Foundation; either version 2.1 of the License, or
## any later version.
##
## This library is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF
## MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and
## documentation provided hereunder is on an "as is" basis, and the
## California Institute of Technology and Japan Science and Technology
## Corporation have no obligations to provide maintenance, support,
## updates, enhancements or modifications.  In no event shall the
## California Institute of Technology or the Japan Science and Technology
## Corporation be liable to any party for direct, indirect, special,
## incidental or consequential damages, including lost profits, arising
## out of the use of this software and its documentation, even if the
## California Institute of Technology and/or Japan Science and Technology
## Corporation have been advised of the possibility of such damage.  See
## the GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with this library; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
##
## The original code contained here was initially developed by:
##
##     Ben Bornstein
##     SBML Team
##     Control and Dynamical Systems, MC 107-81
##     California Institute of Technology
##     Pasadena, CA, 91125, USA
##
##     http://www.sbml.org
##     mailto:sbml-team@caltech.edu
##
## Contributor(s):
##   Michael Hucka <mhucka@caltech.edu> Wrote this Makefile.in.
##

# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under `srcdir'.  Don't 
# set `subdir' to an absolute path, or some `make' actions will fail.

srcdir  = @srcdir@
thisdir = src/sbml

# The `headers' list is not actually used for analyzing source dependencies
# (a separate mechanism is used for that), but for other things such as what
# to distribute and install.

headers =                      \
  AlgebraicRule.h              \
  AssignmentRule.h             \
  Compartment.h                \
  CompartmentVolumeRule.h      \
  Event.h                      \
  EventAssignment.h            \
  FunctionDefinition.h         \
  KineticLaw.h                 \
  ListOf.h                     \
  Model.h                      \
  ModifierSpeciesReference.h   \
  Parameter.h                  \
  ParameterRule.h              \
  RateRule.h                   \
  Reaction.h                   \
  Rule.h                       \
  RuleType.h                   \
  SBMLConvert.h                \
  SBMLDocument.h               \
  SBMLFormatter.h              \
  SBMLHandler.h                \
  SBMLReader.h                 \
  SBMLSchemaInputSource.h      \
  SBMLSchemaInputStream.h      \
  SBMLTagCodes.h               \
  SBMLTypeCodes.h              \
  SBMLTypes.h                  \
  SBMLUnicodeConstants.h       \
  SBMLVisitor.h                \
  SBMLWriter.h                 \
  SBase.h                      \
  SimpleSpeciesReference.h     \
  Species.h                    \
  SpeciesConcentrationRule.h   \
  SpeciesReference.h           \
  Unit.h                       \
  UnitDefinition.h             \
  UnitKind.h

sources =                      \
  AlgebraicRule.cpp            \
  AssignmentRule.cpp           \
  Compartment.cpp              \
  CompartmentVolumeRule.cpp    \
  Event.cpp                    \
  EventAssignment.cpp          \
  FunctionDefinition.cpp       \
  KineticLaw.cpp               \
  ListOf.cpp                   \
  Model.cpp                    \
  ModifierSpeciesReference.cpp \
  Parameter.cpp                \
  ParameterRule.cpp            \
  RateRule.cpp                 \
  Reaction.cpp                 \
  Rule.cpp                     \
  RuleType.c                   \
  SBMLConvert.c                \
  SBMLDocument.cpp             \
  SBMLFormatter.cpp            \
  SBMLHandler.cpp              \
  SBMLReader.cpp               \
  SBMLSchemaInputSource.cpp    \
  SBMLSchemaInputStream.cpp    \
  SBMLTagCodes.cpp             \
  SBMLTypeCodes.cpp            \
  SBMLVisitor.cpp              \
  SBMLWriter.cpp               \
  SBase.cpp                    \
  SimpleSpeciesReference.cpp   \
  Species.cpp                  \
  SpeciesConcentrationRule.cpp \
  SpeciesReference.cpp         \
  Unit.cpp                     \
  UnitDefinition.cpp           \
  UnitKind.c

# Variables `subdirs', `headers', `sources', `libraries', `extra_CPPFLAGS',
# `extra_CXXFLAGS', `extra_LDFLAGS' and `distfiles' are used by the default
# rules in `makefile-common-actions.mk' included at the end.

extra_CPPFLAGS = -I.. -DPACKAGE_VERSION=\"$(PACKAGE_VERSION)\"

ifdef USE_EXPAT
  extra_CPPFLAGS  += $(EXPAT_CPPFLAGS)
  extra_LDFLAGS   += $(EXPAT_LDFLAGS)
  extra_LIBS      += $(EXPAT_LIBS)
else
  extra_CPPFLAGS  += $(XERCES_CPPFLAGS)
  extra_LDFLAGS   += $(XERCES_LDFLAGS)
  extra_LIBS      += $(XERCES_LIBS)
endif

ifneq "$(MAKECMDGOALS)" "dist"
  ifdef USE_LAYOUT
    subdirs = layout
  endif
else
  subdirs = layout
endif

ifneq "$(MAKECMDGOALS)" "all"
  subdirs += test
endif

# The libsbml build is a little more complicated than it used to be.  The
# library is assembled after compiling the object files in this directory.
# However, to link the library, we have to assemble it out of pieces coming
# from sibling directories.  And we put the results in ../.  The following
# redefines the defaults from makefile-common-actions.mk to accomplish this.

objects   = $(call make_objects_list,$(sources))
otherdirs = ../common ../util ../xml ../math ../validator \
            ../validator/constraints

ifdef USE_LAYOUT
  otherdirs += ./layout
endif

objfiles  = $(objects) $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))


# The libraries are actually placed in the parent directory.

libraries = ../$(PACKAGE).a ../$(PACKAGE).$(SHAREDLIBEXT)

# `distfiles' determines the files and directories included in a distribution.
# `distfiles_exclude' is used to filter out specific items, so that even if
# they appear in `distfiles', they will not be copied in the distribution.

distfiles = $(sources) $(headers) Makefile.in


# -----------------------------------------------------------------------------
# Primary build actions
# -----------------------------------------------------------------------------

# The default action is to remake everything.  Those rules which are not
# defined below are defined in makefile-common-actions.mk.

all: Makefile all-recursive all-this-dir

all-this-dir: ;
	make default


# -----------------------------------------------------------------------------
# Checking.
# -----------------------------------------------------------------------------

check: all check-recursive


# -----------------------------------------------------------------------------
# Formatting documentation.
# -----------------------------------------------------------------------------

dvi:

pdf:

ps:

info:

html:


# -----------------------------------------------------------------------------
# Tags.
# -----------------------------------------------------------------------------

tags: etags ctags


# -----------------------------------------------------------------------------
# Installation
# -----------------------------------------------------------------------------

install: all install-libraries install-headers

uninstall: all uninstall-libraries uninstall-headers

installcheck: all installcheck-libraries installcheck-headers


# -----------------------------------------------------------------------------
# Cleaning.
# -----------------------------------------------------------------------------

clean: clean-normal clean-recursive

distclean: distclean-normal distclean-recursive

mostlyclean: mostlyclean-normal mostlyclean-recursive

maintainer-clean: maintainer-clean-normal maintainer-clean-recursive


# -----------------------------------------------------------------------------
# Creating distribution (for libSBML maintainers only)
# -----------------------------------------------------------------------------

dist: dist-normal dist-recursive

distcheck: distcheck-normal distcheck-recursive


# -----------------------------------------------------------------------------
# Miscellaneous
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


# -----------------------------------------------------------------------------
# End.
# -----------------------------------------------------------------------------
