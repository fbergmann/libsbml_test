## @configure_input@
##
## Filename    : Makefile.in
## Description : Makefile for libsbml Lisp bindings
## Author(s)   : Michael Hucka; Martin Ginkel <martin.ginkel@epost.de>
## Organization: Max-Planck-Institute Magdeburg
## Created     : 2004-08-27
## Revision    : $Id$
## $HeadURL$
##
## Copyright 2004 Max-Planck-Institute Magdeburg
##
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published
## by the Free Software Foundation; either version 2.1 of the License, or
## any later version.
##
## This library is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF
## MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and
## documentation provided hereunder is on an "as is" basis, and the
## California Institute of Technology and Japan Science and Technology
## Corporation have no obligations to provide maintenance, support,
## updates, enhancements or modifications.  In no event shall the
## California Institute of Technology or the Japan Science and Technology
## Corporation be liable to any party for direct, indirect, special,
## incidental or consequential damages, including lost profits, arising
## out of the use of this software and its documentation, even if the
## California Institute of Technology and/or Japan Science and Technology
## Corporation have been advised of the possibility of such damage.  See
## the GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with this library; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
##


# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under srcdir.  Don't 
# set `subdir' to an absolute path, or some make actions will fail.

srcdir  = @srcdir@
thisdir = src/bindings/lisp

dirs := libsbml

# Files to install
extras :=  libsbml.asd \
  libsbml-config-run.lisp
# Comes from
#    libsbml/libsbml-config-run.lisp


sources := package.lisp \
    libsbmlc.lisp       \
    memtest.lisp        \
    utilities.lisp      \
    sbml.lisp           \
    sbml-reader.lisp

uffidirs := tps/uffi \
  tps/uffi/src       \
  tps/uffi/src/corman

uffisources := tps/uffi/src/aggregates.lisp \
  tps/uffi/src/functions.lisp               \
  tps/uffi/src/corman/getenv-ccl.lisp       \
  tps/uffi/src/primitives.lisp              \
  tps/uffi/src/readmacros-mcl.lisp          \
  tps/uffi/src/objects.lisp                 \
  tps/uffi/src/os.lisp                      \
  tps/uffi/src/strings.lisp                 \
  tps/uffi/src/package.lisp                 \
  tps/uffi/src/libraries.lisp               \
  tps/uffi/src/corman/getenv-ccl.lisp

uffiextras := tps/uffi/uffi.asd \
  tps/uffi/LICENSE              \
  tps/uffi/README               \
  tps/uffi/AUTHORS

asdfdirs := tps/asdf

asdfextras := tps/asdf/asdf.lisp

cparsedirs := tps/cparse

cparseextras := tps/cparse/cparse.asd \
  tps/cparse/README.txt

cparsesources := tps/cparse/asdf.lisp \
  tps/cparse/ctype-test.lisp          \
  tps/cparse/cmu-alien.lisp           \
  tps/cparse/cparse.lisp              \
  tps/cparse/ctype.lisp               \
  tps/cparse/cl-unit.lisp             \
  tps/cparse/cmu-alien-package.lisp   \
  tps/cparse/cparse-package.lisp      \
  tps/cparse/acl-ffi.lisp             \
  tps/cparse/uffi.lisp

cparsefasls :=  $(cparsesources:.lisp=.$(FASLEXT))

uffifasls :=  $(uffisources:.lisp=.$(FASLEXT))

fasls := $(sources:.lisp=.$(FASLEXT))

# `distfiles' determines the files and directories included in a distribution.
# `distfiles_exclude' is used to filter out specific items, so that even if
# they appear in `distfiles', they will not be copied in the distribution.

distfiles =                  \
  Makefile.in                \
  README.txt                 \
  boolean-functions.lisp     \
  build.lisp.in              \
  libsbml-config-run.lisp.in \
  libsbml-config.lisp.in     \
  libsbml.asd                \
  libsbml.lisp               \
  sbml.lisp                  \
  sbmllisp-pre.h             \
  sbmllisp.h                 \
  $(sources)                 \
  $(asdfdirs)                \
  $(asdfextras)              \
  $(asdfsources)             \
  $(cparsedirs)              \
  $(cparsesources)           \
  $(cparseextras)            \
  tps/cparse/ChangeLog       \
  tps/cparse/README.txt      \
  $(uffidirs)                \
  $(uffisources)             \
  $(uffiextras)              \
  tps/uffi/ChangeLog         \
  tps/uffi/AUTHORS           \
  tps/uffi/INSTALL           \
  tps/uffi/LICENSE           \
  tps/uffi/README            \
  tps/uffi/NEWS              \
  tps/uffi/TODO

installdirs:=$(dirs)
installfiles:=$(sources) $(extras) $(fasls)

ifeq "$(EXT_ASDF)" ""
  installdirs:=$(installdirs) $(asdfdirs)
  installfiles:=$(installfiles) $(asdfextras)
endif

ifeq "$(EXT_UFFI)" ""
  installdirs:=$(installdirs) $(uffidirs)
  installfiles:=$(installfiles) $(uffiextras) $(uffisources) $(uffifasls)
  UFFILINK=../uffi/uffi.asd
else
  UFFILINK=$(UFFI)/uffi.asd
endif

ifeq "$(EXT_CPARSE)" ""
  installdirs:=$(installdirs) $(cparsedirs)
  installfiles:=$(installfiles) $(cparseextras) $(cparsesources) $(cparsefasls)
  CPARSELINK=../cparse/cparse.asd
else
  CPARSELINK=$(CPARSE)/cparse.asd
endif

extra_distclean = cparse.asd uffi.asd

# Compile the lisp code with the current $(LISP)
# We don't have to care for uffi and cparse because
# they are compiled by asdf if needed,
# wherever they are (ext vs. local)
%.$(FASLEXT): %.lisp
	-echo '(load "build.lisp")' | $(LISP)


# -----------------------------------------------------------------------------
# Primary build actions
# -----------------------------------------------------------------------------

all: Makefile $(fasls)

clean:
	-rm -f *.$(FASLEXT) tps/uffi/src/*.$(FASLEXT) tps/cparse/*.$(FASLEXT) 
	-rm -f sbmllisp-pre.h

# Preprocess header
sbmllisp-pre.h: sbmllisp.h $(wildcard ../../*/*.h)
	$(CPP) -I../.. $< > $@

libsbmlc.lisp: sbmllisp-pre.h
	echo '(load "build.lisp")' | $(LISP)

# -----------------------------------------------------------------------------
# Targets for checking/testing.
# -----------------------------------------------------------------------------

check:


# -----------------------------------------------------------------------------
# Installation.
# -----------------------------------------------------------------------------

install: all lispinstallfiles

uninstall: lispuninstalldirs

lispinstalldirs: 
	for d in "." $(installdirs); do\
	  d=`echo $(LIBDIR)/lisp/$$d|sed 's,tps/,,'`;\
	  if test ! -d $$d; then\
	    $(MKINSTALLDIRS) $$d;\
	  fi;\
	  chmod 755 $$d;\
        done

## The following rule is crude, but I dont know how to reverse
## the list of dirs
lispuninstalldirs: lispuninstallfiles
	- for d in $(installdirs) $(installdirs) $(installdirs) ""; do\
	  d=`echo $(LIBDIR)/lisp/$$d|sed 's,tps/,,`;\
	  if test -d $$d; then\
	     rmdir $$d;\
	  fi\
        done

lispuninstallfiles: 
	for f in $(installfiles); do\
          f=$(LIBDIR)/lisp/$$f;\
	  if test -f $$f -o -h $$f; then\
	     rm $$f;\
	  fi\
        done
	-rm $(LIBDIR)/lisp/libsbml/cparse.asd \
        $(LIBDIR)/lisp/libsbml/uffi.asd \
	$(LIBDIR)/lisp/libsbml/libsbml-config.lisp

lispinstallfiles: $(fasls) lispinstalldirs
	sed -e 's,@final_libdir@,$(LIBDIR),g' < libsbml-config-run.lisp >$(LIBDIR)/lisp/libsbml/libsbml-config.lisp
	for f in $(installfiles); do\
          target=`dirname $(LIBDIR)/lisp/$$f|sed 's,tps/,,'` ;\
	  if test "$$target" = "$(LIBDIR)/lisp" ; then \
	    target="$(LIBDIR)/lisp/libsbml"; \
          fi; \
	  if test -f $$f ; then\
            echo Copy $$target/`basename $$f` ;\
	    $(INSTALL) -p -m644 $$f $$target ;\
	  fi;\
        done
	cd $(LIBDIR)/lisp/libsbml; \
        for f in $(UFFILINK) $(CPARSELINK) ; do \
	  base="`basename $$f`" ;\
	  if test -f $$base -o -h $$base ; then \
	    rm $$base; \
          fi; \
	  ln -s $$f ./ ;\
	done; 



# -----------------------------------------------------------------------------
# Creating distribution (for libSBML maintainers only)
# -----------------------------------------------------------------------------

dist: dist-normal

distcheck: distcheck-normal


# -----------------------------------------------------------------------------
# Tags.
# -----------------------------------------------------------------------------

tags: etags ctags


# -----------------------------------------------------------------------------
# Miscellaneous
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


