# -*- perl -*-
# generated by perlify.pl from libsbml/src/annotation/test/TestModelHistory.c
# followed by little human processing to fix syntactic specialties
# perify.pl is unable to handle right now =;) xtof
use Test::More;
#BEGIN { plan tests => 132 };
BEGIN { plan tests => 106 };

use LibSBML;
use strict;
#########################

test_Date_create();
test_Date_createFromString();
test_Date_setters();
test_Date_getDateAsString();
test_ModelCreator_create();
test_ModelCreator_setters();
test_ModelHistory_create();
test_ModelHistory_addCreator();
test_ModelHistory_setCreatedDate();
test_ModelHistory_setModifiedDate();
test_ModelHistory_addModifiedDate();

#---
sub test_Date_create {
 my $date = new LibSBML::Date(2005, 12, 30, 12, 15, 45, 1, 2, 0);
 ok( defined $date );
 ok( $date->getYear() == 2005 );
 ok( $date->getMonth() == 12 );
 ok( $date->getDay() == 30 );
 ok( $date->getHour() == 12 );
 ok( $date->getMinute() == 15 );
 ok( $date->getSecond() == 45 );
 ok( $date->getSignOffset() == 1 );
 ok( $date->getHoursOffset() == 2 );
 ok( $date->getMinutesOffset() == 0 );
}

#---
sub test_Date_createFromString {
 my $dd = '2012-12-02T14:56:11Z';
 my $date = new LibSBML::Date($dd);
 ok( defined $date );
 ok( $date->getDateAsString() eq '2012-12-02T14:56:11Z' );
 ok( $date->getYear() == 2012 );
 ok( $date->getMonth() == 12 );
 ok( $date->getDay() == 2 );
 ok( $date->getHour() == 14 );
 ok( $date->getMinute() == 56 );
 ok( $date->getSecond() == 11 );
 ok( $date->getSignOffset() == 0 );
 ok( $date->getHoursOffset() == 0 );
 ok( $date->getMinutesOffset() == 0 );
}

#---
sub test_Date_setters {
 my $date = new LibSBML::Date(2005, 12, 30, 12, 15, 45, 1, 2, 0);
 ok( defined $date );
 $date->setYear(2012);
 $date->setMonth(3);
 $date->setDay(28);
 $date->setHour(23);
 $date->setMinute(4);
 $date->setSecond(32);
 $date->setSignOffset(1);
 $date->setHoursOffset(2);
 $date->setMinutesOffset(32);
 ok( $date->getYear() == 2012 );
 ok( $date->getMonth() == 3 );
 ok( $date->getDay() == 28 );
 ok( $date->getHour() == 23 );
 ok( $date->getMinute() == 4 );
 ok( $date->getSecond() == 32 );
 ok( $date->getSignOffset() == 1 );
 ok( $date->getHoursOffset() == 2 );
 ok( $date->getMinutesOffset() == 32 );
 ok( $date->getDateAsString() eq '2012-03-28T23:04:32+02:32' );
}

#---
sub test_Date_getDateAsString {
 my $dd = '2005-02-02T14:56:11Z';
 my $date = new LibSBML::Date($dd);
 ok( defined $date );
 ok( $date->getYear() == 2005 );
 ok( $date->getMonth() == 2 );
 ok( $date->getDay() == 2 );
 ok( $date->getHour() == 14 );
 ok( $date->getMinute() == 56 );
 ok( $date->getSecond() == 11 );
 ok( $date->getSignOffset() == 0 );
 ok( $date->getHoursOffset() == 0 );
 ok( $date->getMinutesOffset() == 0 );
 $date->setYear(2012);
 $date->setMonth(3);
 $date->setDay(28);
 $date->setHour(23);
 $date->setMinute(4);
 $date->setSecond(32);
 $date->setSignOffset(1);
 $date->setHoursOffset(2);
 $date->setMinutesOffset(32);
 ok( $date->getDateAsString() eq '2012-03-28T23:04:32+02:32' );
}

#---
sub test_ModelCreator_create {
 my $mc = new LibSBML::ModelCreator();
 ok( defined $mc );
}

#---
sub test_ModelCreator_setters {
 my $mc = new LibSBML::ModelCreator();
 ok( defined $mc );
 ok( $mc->isSetFamilyName() == 0 );
 ok( $mc->isSetGivenName() == 0 );
 ok( $mc->isSetEmail() == 0 );
 ok( $mc->isSetOrganisation() == 0 );
 $mc->setFamilyName('Keating');
 $mc->setGivenName('Sarah');
 $mc->setEmail('sbml-team@caltech.edu');
 $mc->setOrganisation('UH');
 ok( $mc->getFamilyName() eq 'Keating' );
 ok( $mc->getGivenName() eq 'Sarah' );
 ok( $mc->getEmail() eq 'sbml-team@caltech.edu' );
 ok( $mc->getOrganisation() eq 'UH' );
 ok( $mc->isSetFamilyName() == 1 );
 ok( $mc->isSetGivenName() == 1 );
 ok( $mc->isSetEmail() == 1 );
 ok( $mc->isSetOrganisation() == 1 );
 $mc->unsetFamilyName();
 $mc->unsetGivenName();
 $mc->unsetEmail();
 $mc->unsetOrganisation();
 ok( $mc->getFamilyName() eq '' );
 ok( $mc->getGivenName() eq '' );
 ok( $mc->getEmail() eq '' );
 ok( $mc->getOrganisation() eq '' );
 ok( $mc->isSetFamilyName() == 0 );
 ok( $mc->isSetGivenName() == 0 );
 ok( $mc->isSetEmail() == 0 );
 ok( $mc->isSetOrganisation() == 0 );
 # test alternate spelling functions;
 ok( $mc->isSetOrganization() == 0 );
 $mc->setOrganization('UH');
 ok( $mc->getOrganization() eq 'UH' );
 ok( $mc->isSetOrganization() == 1 );
 $mc->unsetOrganisation();
 ok( $mc->getOrganization() eq '' );
 ok( $mc->isSetOrganization() == 0 );
}

#---
sub test_ModelHistory_create {
 my $history = new LibSBML::ModelHistory();
 ok( defined $history );
=errors
 ok( $history->getListCreators() != '' );
 ok( $history->getCreatedDate() eq '' );
 ok( $history->getModifiedDate() eq '' );
=cut
}

#---
sub test_ModelHistory_addCreator {
 my $history = new LibSBML::ModelHistory();
 ok( $history->getNumCreators() == 0 );
 ok( defined $history );
 my $mc = new LibSBML::ModelCreator();
 ok( defined $mc );
 $mc->setFamilyName('Keating');
 $mc->setGivenName('Sarah');
 $mc->setEmail('sbml-team@caltech.edu');
 $mc->setOrganisation('UH');
 $history->addCreator($mc);
 ok( $history->getNumCreators() == 1 );
=errors
 my $newMC = $history->getListCreators()->get(0);
 ok( defined $newMC );
 ok( $newMC->getFamilyName() eq 'Keating' );
 ok( $newMC->getGivenName() eq 'Sarah' );
 ok( $newMC->getEmail() eq 'sbml-team@caltech.edu' );
 ok( $newMC->getOrganisation() eq 'UH' );
=cut
}

#---
sub test_ModelHistory_setCreatedDate {
 my $history = new LibSBML::ModelHistory();
 ok( defined $history );
 ok( $history->isSetCreatedDate() == 0 );
 my $date = new LibSBML::Date(2005, 12, 30, 12, 15, 45, 1, 2, 0);
 $history->setCreatedDate($date);
 ok( $history->isSetCreatedDate() == 1 );
 my $newdate = $history->getCreatedDate();
 ok( $newdate->getYear() == 2005 );
 ok( $newdate->getMonth() == 12 );
 ok( $newdate->getDay() == 30 );
 ok( $newdate->getHour() == 12 );
 ok( $newdate->getMinute() == 15 );
 ok( $newdate->getSecond() == 45 );
 ok( $newdate->getSignOffset() == 1 );
 ok( $newdate->getHoursOffset() == 2 );
 ok( $newdate->getMinutesOffset() == 0 );
}

#---
sub test_ModelHistory_setModifiedDate {
 my $history = new LibSBML::ModelHistory();
 ok( defined $history );
 ok( $history->isSetModifiedDate() == 0 );
 my $date = new LibSBML::Date(2005, 12, 30, 12, 15, 45, 1, 2, 0);
 $history->setModifiedDate($date);
 ok( $history->isSetModifiedDate() == 1 );
 my $newdate = $history->getModifiedDate();
 ok( $newdate->getYear() == 2005 );
 ok( $newdate->getMonth() == 12 );
 ok( $newdate->getDay() == 30 );
 ok( $newdate->getHour() == 12 );
 ok( $newdate->getMinute() == 15 );
 ok( $newdate->getSecond() == 45 );
 ok( $newdate->getSignOffset() == 1 );
 ok( $newdate->getHoursOffset() == 2 );
 ok( $newdate->getMinutesOffset() == 0 );
}

#---
sub test_ModelHistory_addModifiedDate {
 my $history = new LibSBML::ModelHistory();
 ok( defined $history );
 ok( $history->isSetModifiedDate() == 0 );
 ok( $history->getNumModifiedDates() == 0 );
 my $date = new LibSBML::Date(2005, 12, 30, 12, 15, 45, 1, 2, 0);
 $history->addModifiedDate($date);
 ok( $history->getNumModifiedDates() == 1 );
 ok( $history->isSetModifiedDate() == 1 );
=errors
 my $newdate = $history->getListModifiedDates()->get(0);
 ok( $newdate->getYear() == 2005 );
 ok( $newdate->getMonth() == 12 );
 ok( $newdate->getDay() == 30 );
 ok( $newdate->getHour() == 12 );
 ok( $newdate->getMinute() == 15 );
 ok( $newdate->getSecond() == 45 );
 ok( $newdate->getSignOffset() == 1 );
 ok( $newdate->getHoursOffset() == 2 );
 ok( $newdate->getMinutesOffset() == 0 );
=cut
 my $date1 = new LibSBML::Date(2008, 11, 2, 16, 42, 40, 1, 2, 0);
 $history->addModifiedDate($date1);
 ok( $history->getNumModifiedDates() == 2 );
 ok( $history->isSetModifiedDate() == 1 );
=errors
 my $newdate1 = $history->getModifiedDateFromList(1);
 ok( $newdate1->getYear() == 2008 );
 ok( $newdate1->getMonth() == 11 );
 ok( $newdate1->getDay() == 2 );
 ok( $newdate1->getHour() == 16 );
 ok( $newdate1->getMinute() == 42 );
 ok( $newdate1->getSecond() == 40 );
 ok( $newdate1->getSignOffset() == 1 );
 ok( $newdate1->getHoursOffset() == 2 );
 ok( $newdate1->getMinutesOffset() == 0 );
=cut
}
