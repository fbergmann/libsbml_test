## @configure_input@
##
## THIS FILE IS GENERATED BY CONFIGURE.  DO NOT EDIT SETUP.PY; EDIT SETUP.PY.IN
## INSTEAD.
##
## @file    setup.py.in
## @brief   Python distutils code for libSBML Python module
## @author  Michael Hucka
## @author  Ben Bornstein
## @author  Ben Kovitz
## 
## $Id$
## $HeadURL$
##
##<!---------------------------------------------------------------------------
## This file is part of libSBML.  Please visit http://sbml.org for more
## information about SBML, and the latest version of libSBML.
##
## Copyright 2005-2009 California Institute of Technology.
## Copyright 2002-2005 California Institute of Technology and
##                     Japan Science and Technology Corporation.
## 
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation.  A copy of the license agreement is provided
## in the file named "LICENSE.txt" included with this software distribution
## and also available online as http://sbml.org/software/libsbml/license.html
##----------------------------------------------------------------------- -->*/

# While Python Distutils works with SWIG and C, it does not currently
# work with SWIG and C++ (it doesn't generate the appropriate
# compilation and link commands).  This is a known bug with Distutils.

import sys, os

from os.path import abspath, exists

from distutils.sysconfig import get_python_lib
from distutils.core import setup, Extension
from distutils import sysconfig

# Distutils does not define an 'uninstall'.  The following code was
# borrowed heavily from similar code in the setup.py.in file of
# "libprelude" (http://www.prelude-ids.com), written by Yoann
# Vandoorselaere.  Libprelude is Copyright (C) 2005 PreludeIDS Technologies
# SARL and released under the LGPL version 2.

installed_files = ["libsbml/_libsbml.@PYTHON_EXT@", 
		   "libsbml/libsbml.py", 
		   "libsbml/libsbml.pyc",
		   "libsbml.pth"]

def get_root():
    try:
        return sys.argv[sys.argv.index("--root") + 1]
    except ValueError:
        return ""

def is_system_wide_install():
    return os.access(get_python_lib(), os.W_OK)

def uninstall():
    prefix = "@prefix@"
    
    r = get_root() + "/"

    for f in installed_files:
        ppath = get_python_lib(prefix=prefix)
        file = r + ppath + "/" + f
        print file
        exists(file) and os.remove(file)

    ppath = get_python_lib(prefix=prefix)
    dir = r + ppath + "/libsbml"
    exists(dir) and os.rmdir(dir)

    sys.exit(0)

commands = {
    "uninstall": uninstall,
}

if len(sys.argv) > 1 and commands.has_key(sys.argv[1]):
    commands[sys.argv[1]]()


setup(name             = "libsbml", 
      version          = "@PACKAGE_VERSION@",
      description      = "LibSBML Python API",
      long_description = ("LibSBML is a library for reading, writing and "+
                          "manipulating the Systems Biology Markup Language "+
                          "(SBML).  It is written in ISO C and C++, supports "+
                          "SBML Levels 1 and 2, and runs on Linux, Microsoft "+
                          "Windows, and Apple MacOS X.  For more information "+
                          "about SBML, please see http://sbml.org."),
      license          = "LGPL",
      author           = "SBML Team",
      author_email     = "@PACKAGE_BUGREPORT@",
      url              = "http://sbml.org",
      py_modules       = ["libsbml"],
      ext_modules      = [Extension("_libsbml", 
                                    ["libsbml.i", "libsbml.cpp"],
                                    include_dirs="../../src")]
)
