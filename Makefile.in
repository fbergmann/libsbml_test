## @configure_input@
##
## Filename    : Makefile.in
## Description : Makefile template for use by 'configure'
## Author(s)   : SBML Team <sbml-team@caltech.edu>
## Organization: California Institute of Technology
## Created     : 2004-05-31
## Revision    : $Id$
## Source      : $Source$
##
## Copyright 2004 California Institute of Technology and
## Japan Science and Technology Corporation.
##
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published
## by the Free Software Foundation; either version 2.1 of the License, or
## any later version.
##
## This library is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF
## MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and
## documentation provided hereunder is on an "as is" basis, and the
## California Institute of Technology and Japan Science and Technology
## Corporation have no obligations to provide maintenance, support,
## updates, enhancements or modifications.  In no event shall the
## California Institute of Technology or the Japan Science and Technology
## Corporation be liable to any party for direct, indirect, special,
## incidental or consequential damages, including lost profits, arising
## out of the use of this software and its documentation, even if the
## California Institute of Technology and/or Japan Science and Technology
## Corporation have been advised of the possibility of such damage.  See
## the GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with this library; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
##
## The original code contained here was initially developed by:
##
##     Ben Bornstein
##     SBML Team
##     Control and Dynamical Systems, MC 107-81
##     California Institute of Technology
##     Pasadena, CA, 91125, USA
##
##     http://www.sbml.org
##     mailto:sbml-team@caltech.edu
##
## Contributor(s):
##   Michael Hucka <mhucka@caltech.edu> Wrote this Makefile.in.
##


# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under `srcdir'.  Don't 
# set `subdir' to an absolute path, or some make actions will fail.

srcdir  = @srcdir@
thisdir = .

# Variables `subdirs', `headers', `sources', `libraries', `extra_CPPFLAGS',
# `extra_CXXFLAGS', `extra_LDFLAGS' and `distfiles' are used by the default
# rules in `makefile-common-actions.mk' included at the end.

ifeq ($(USE_EXPAT),1)
  subdirs = expat src bindings
else
  subdirs = src bindings
endif

distfiles = \
        AUTHORS.txt          \
        ChangeLog.txt        \
        COPYING.html         \
        COPYING.txt          \
        NEWS.txt             \
        README.txt           \
        VERSION.txt          \
        Makefile.in          \
        aclocal.m4           \
        bindings             \
        config/compile       \
        config/config.guess  \
        config/config.sub    \
        config/install-sh    \
        config/missing       \
        config/mkinstalldirs \
        configure            \
        configure.ac         \
        docs/formatted       \
        examples             \
        src/sbml/config.h.in \
        win32                \
	xml-schemas 

dist_subdirs = bindings config docs examples expat invalid-models src win32 xml-schemas

distdir = $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)

extra_distclean = config.status config.cache config.log \
	src/sbml/config.h autom4te.cache


# -----------------------------------------------------------------------------
# Primary build actions
# -----------------------------------------------------------------------------

# The default rules in `makefile-common-actions.mk' know to interpret goals
# of the form `foo-recursive' to run 'make foo' in directories defined in
# variable `subdirs'.

all: configure Makefile all-recursive 

check: check-recursive

dvi: dvi-recursive

pdf: pdf-recursive

ps: ps-recursive

info: info-recursive


# -----------------------------------------------------------------------------
# Installation
# -----------------------------------------------------------------------------

install: install-recursive

uninstall: uninstall-recursive

installdirs: installdirs-recursive

install-exec: install-exec-recursive

install-data: install-data-recursive

installcheck: installcheck-recursive

install-info: install-info-recursive

install-man: install-man-recursive

uninstall-info: uninstall-info-recursive

installcheck: installcheck-recursive


# -----------------------------------------------------------------------------
# Cleaning.
# -----------------------------------------------------------------------------

clean: clean-recursive

distclean: distclean-recursive

mostlyclean: mostlyclean-recursive

maintainer-clean: maintainer-clean-recursive


# -----------------------------------------------------------------------------
# Creating distributions
# -----------------------------------------------------------------------------

#remove_distdir = \
#  { test ! -d $(distdir) \
#    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
#         && rm -fr $(distdir); }; }

#gzip_env = --best
#distuninstallcheck_listfiles = find . -type f -print
#distcleancheck_listfiles = find . -type f -print

#distdir: $(distfiles)
#	$(remove_distdir)
#	mkdir $(distdir)
#	$(mkinstalldirs) $(distdir)/./src/sbml $(distdir)/config $(distdir)/docs
#	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
#	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
#	list='$(distfiles)'; for file in $$list; do \
#	  case $$file in \
#	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
#	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(TOP_BUILDDIR)/|"`;; \
#	  esac; \
#	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
#	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
#	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
#	    dir="/$$dir"; \
#	    $(mkinstalldirs) "$(distdir)$$dir"; \
#	  else \
#	    dir=''; \
#	  fi; \
#	  if test -d $$d/$$file; then \
#	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
#	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
#	    fi; \
#	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
#	  else \
#	    test -f $(distdir)/$$file \
#	    || cp -p $$d/$$file $(distdir)/$$file \
#	    || exit 1; \
#	  fi; \
#	done
#	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
#	  if test "$$subdir" = .; then :; else \
#	    test -d $(distdir)/$$subdir \
#	    || mkdir $(distdir)/$$subdir \
#	    || exit 1; \
#	    (cd $$subdir && \
#	      $(MAKE) $(MAKEFLAGS) \
#	        TOP_DISTDIR="$(TOP_DISTDIR)" \
#	        distdir=../$(distdir)/$$subdir \
#	        distdir) \
#	      || exit 1; \
#	  fi; \
#	done
#	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
#	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
#	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
#	  ! -type d ! -perm -444 -exec $(SHELL) $(INSTALL_SH) -c -m a+r {} {} \; \
#	|| chmod -R a+r $(distdir)

#dist-gzip: distdir
#	$(AMTAR) chof - $(distdir) | GZIP=$(gzip_env) gzip -c >$(distdir).tar.gz
#	$(remove_distdir)

#dist dist-all: distdir
#	$(AMTAR) chof - $(distdir) | GZIP=$(gzip_env) gzip -c >$(distdir).tar.gz
#	$(remove_distdir)

## This target untars the dist file and tries a VPATH configuration.  Then
## it guarantees that the distribution is self-contained by making another
## tarfile.
#distcheck: dist
#	$(remove_distdir)
#	GZIP=$(gzip_env) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
#	chmod -R a-w $(distdir); chmod a+w $(distdir)
#	mkdir $(distdir)/=build
#	mkdir $(distdir)/=inst
#	chmod a-w $(distdir)
#	dc_install_base=`$(am__cd) $(distdir)/=inst && pwd` \
#	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
#	  && cd $(distdir)/=build \
#	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
#	    $(DISTCHECK_CONFIGURE_FLAGS) \
#	  && $(MAKE) $(AM_MAKEFLAGS) \
#	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
#	  && $(MAKE) $(AM_MAKEFLAGS) check \
#	  && $(MAKE) $(AM_MAKEFLAGS) install \
#	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
#	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
#	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
#	        distuninstallcheck \
#	  && chmod -R a-w "$$dc_install_base" \
#	  && ({ \
#	       (cd ../.. && $(mkinstalldirs) "$$dc_destdir") \
#	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
#	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
#	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
#	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
#	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
#	  && rm -rf "$$dc_destdir" \
#	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
#	  && rm -f $(distdir).tar.gz \
#	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
#	$(remove_distdir)
#	@echo "$(distdir).tar.gz is ready for distribution" | \
#	  sed 'h;s/./=/g;p;x;p;x'

#distuninstallcheck:
#	cd $(distuninstallcheck_dir) \
#	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
#	   || { echo "ERROR: files left after uninstall:" ; \
#	        if test -n "$(DESTDIR)"; then \
#	          echo "  (check DESTDIR support)"; \
#	        fi ; \
#	        $(distuninstallcheck_listfiles) ; \
#	        exit 1; } >&2

#distcleancheck: distclean
#	if test '$(srcdir)' = . ; then \
#	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
#	  exit 1 ; \
#	fi
#	test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
#	  || { echo "ERROR: files left in build directory after distclean:" ; \
#	       $(distcleancheck_listfiles) ; \
#	       exit 1; } >&2


# -----------------------------------------------------------------------------
# Miscellaneous
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


# -----------------------------------------------------------------------------
# End.
# -----------------------------------------------------------------------------
