## @configure_input@
##
## Filename    : Makefile.in
## Description : Makefile template for use by 'configure'
## Author(s)   : Michael Hucka <mhucka@caltech.edu>
## Organization: California Institute of Technology
## Created     : 2004-05-31
## Revision    : $Id$
## Source      : $Source$
##
## Copyright 2004 California Institute of Technology and Japan Science and
## Technology Corporation.
##
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation.  A copy of the license agreement is
## provided in the file named "LICENSE.txt" included with this software
## distribution.  It is also available online at
## http://sbml.org/software/libsbml/license.html
##
## You should have received a copy of the GNU Lesser General Public License
## along with this library; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
##


# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under `srcdir'.  Don't 
# set `subdir' to an absolute path, or some make actions will fail.

srcdir  = @srcdir@
thisdir = .

# Variables `examples' and `xml-schemas' are local variables reused below.
# SK removed xml-schema files

examples = \
  examples/README.txt              \
  examples/c/Makefile.in           \
  examples/c/convertSBML.c         \
  examples/c/drawMath.c            \
  examples/c/evaluateMath.c        \
  examples/c/printMath.c           \
  examples/c/printSBML.c           \
  examples/c/readSBML.c            \
  examples/c/translateMath.c       \
  examples/c/util.c                \
  examples/c/util.h                \
  examples/c/validateSBML.c        \
  examples/c++/Makefile.in         \
  examples/c++/convertSBML.cpp     \
  examples/c++/printSBML.cpp       \
  examples/c++/readSBML.cpp        \
  examples/c++/translateMath.cpp   \
  examples/c++/util.c              \
  examples/c++/util.h              \
  examples/c++/validateSBML.cpp    \
  examples/java/Makefile.in        \
  examples/java/README.txt         \
  examples/java/convertSBML.java   \
  examples/java/evaluateMath.java  \
  examples/java/libSBMLHelper.java \
  examples/java/printMath.java     \
  examples/java/printSBML.java     \
  examples/java/readSBML.java      \
  examples/java/translateMath.java \
  examples/java/validateSBML.java  \
  examples/layout/Makefile.in      \
  examples/layout/example1.cpp     \
  examples/layout/example2.cpp     \
  examples/layout/example3.cpp     \
  examples/layout/example1.java    \
  examples/layout/example1.py      \
  examples/layout/layout2svg.xsl   \
  examples/perl/convertSBML.pl     \
  examples/perl/evaluateMath.pl    \
  examples/perl/printMath.pl       \
  examples/perl/printSBML.pl       \
  examples/perl/readSBML.pl        \
  examples/perl/translateMath.pl   \
  examples/perl/validateSBML.pl


# The files listed in `docs' are copied to the documentation directory
# during a `make install'.

docs = \
  AUTHORS.txt                                          \
  COPYING.html                                         \
  COPYING.txt                                          \
  NEWS.txt                                             \
  README.txt                                           \
  VERSION.txt                                          \
  FUNDING.txt                                          \
  $(examples)                                          

# Variables `subdirs', `headers', `sources', `libraries', `extra_CPPFLAGS',
# `extra_CXXFLAGS', `extra_LDFLAGS', `extra_clean', and `distfiles' are
# used by the default rules in `makefile-common-actions.mk' included at the
# end.

subdirs = src docs win32

# `distfile' is the list of files used for creating distributions,
# something that only the libSBML developers should do.  The list of files
# here is in addition to the subdirectories listed in `subdirs'.  The
# latter are the object of `make dist' and the files that are collected
# are under the control of the makefiles in the subdirectories.

distfiles = \
        AUTHORS.txt                                          \
        COPYING.html                                         \
        COPYING.txt                                          \
        FUNDING.txt                                          \
        Makefile.in                                          \
        NEWS.txt                                             \
        README.txt                                           \
        VERSION.txt                                          \
        aclocal.m4                                           \
        config/config.guess                                  \
        config/config.sub                                    \
        config/expat.m4                                      \
        config/install-sh                                    \
        config/java.m4                                       \
        config/libcheck.m4                                   \
        config/lisp.m4                                       \
        config/makefile-common-actions.mk                    \
        config/makefile-common-vars.mk.in                    \
        config/matlab.m4                                     \
        config/missing                                       \
        config/mkinstalldirs                                 \
        config/python.m4                                     \
        config/swig.m4                                       \
        config/xercesc.m4                                    \
        configure                                            \
        configure.ac                                         \
	$(examples)                                          

# The files listed in `extra_distclean' are items created by configure or
# make, and that are removed by the default rules for `make distclean' in
# makefile-common-actions.mk.

extra_distclean = config.status config.cache config.log autom4te.cache \
	src/common/config.h src/common/stamp-h1 include


# -----------------------------------------------------------------------------
# Primary build actions.
# -----------------------------------------------------------------------------

# The default rules in `makefile-common-actions.mk' know to interpret goals
# of the form `foo-recursive' to run 'make foo' in directories defined in
# variable `subdirs'.

all: configure Makefile include all-recursive

docs: docs-recursive

include: include-recursive


# -----------------------------------------------------------------------------
# Checking.
# -----------------------------------------------------------------------------

check: check-recursive


# -----------------------------------------------------------------------------
# Formatting documentation.
# -----------------------------------------------------------------------------

dvi: dvi-recursive

pdf: pdf-recursive

ps: ps-recursive

info: info-recursive

html: html-recursive


# -----------------------------------------------------------------------------
# Tags.
# -----------------------------------------------------------------------------

tags: tags-recursive


# -----------------------------------------------------------------------------
# Installation.
# -----------------------------------------------------------------------------

install: all install-recursive install-warnings

install-docs: install-docs-recursive

installcheck: installcheck-recursive

install-warnings:
ifneq "$(HOST_TYPE)" "darwin"
	@echo ""
	@echo "The installation of libSBML is finished.  On certain platforms"
	@echo "(such as Linux), you will also need to do one of the following:"
	@echo "1) run 'ldconfig' (see the man page if this is unfamiliar)"
	@echo "2) set the LD_LIBRARY_PATH (or equivalent) environment variable"
	@echo ""
endif

uninstall: uninstall-recursive
	@if test -d "$(DESTDIR)$(LIBDIR)"; then \
	  if test -n "`find $(DESTDIR)$(LIBDIR) -empty -maxdepth 0`"; then \
	    echo rmdir $(DESTDIR)$(LIBDIR); \
	    rmdir $(DESTDIR)$(LIBDIR); \
	  else \
	    echo "Directory $(DESTDIR)$(LIBDIR) not empty; leaving it alone"; \
	  fi; \
	fi; \
	if test -d "$(DESTDIR)$(INCLUDEDIR)"; then \
	  if test -n "`find $(DESTDIR)$(INCLUDEDIR) -empty -maxdepth 0`"; then \
	    echo rmdir $(DESTDIR)$(INCLUDEDIR); \
	    rmdir $(DESTDIR)$(INCLUDEDIR); \
	  else \
	    echo "Directory $(DESTDIR)$(INCLUDEDIR) not empty; leaving it alone"; \
	  fi; \
	fi; \
	if test -d "$(DESTDIR)"; then \
	  if test -n "`find $(DESTDIR) -empty -maxdepth 0`"; then \
	    echo rmdir $(DESTDIR); \
	    rmdir $(DESTDIR); \
	  else \
	    echo "Directory $(DESTDIR) not empty; leaving it alone"; \
	  fi; \
	fi;


# -----------------------------------------------------------------------------
# Cleaning.
# -----------------------------------------------------------------------------

clean: clean-normal clean-recursive

distclean: distclean-normal distclean-recursive

mostlyclean: mostlyclean-normal mostlyclean-recursive

maintainer-clean: maintainer-clean-normal maintainer-clean-recursive


# -----------------------------------------------------------------------------
# Creating distribution (for libSBML maintainers only)
# -----------------------------------------------------------------------------

# The `make dist' command is only available from this top-level makefile.

remove_distdir = \
  { test ! -d $(DISTDIR) \
    || { find $(DISTDIR) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(DISTDIR); }; }

# Don't use GNU make's $(basename ...) command in the following; it behaves
# differently in a critical way (specifically, in its handling of dots).

archive_basename = $(shell basename $(DISTDIR))
tar_archive      = $(archive_basename).tar.gz
zip_archive      = $(archive_basename).zip

dist-gzip: config-check dist-all
	if test -d $(DISTDIR); then \
	  GZIP="--best" tar -C $(DISTDIR)/.. \
		-chozf $(tar_archive) $(notdir $(DISTDIR)); \
	  $(remove_distdir); \
	fi

dist dist-zip: config-check dist-all
	if test -d $(DISTDIR); then				\
	  cd $(DISTDIR)/..					\
	  && zip -vr9  $(zip_archive) "$(archive_basename)"	\
	  && zip -vlr9 $(zip_archive)				\
	   `find "$(archive_basename)" -name '*.dsp' -o -name '*.dsw' -o -name '*.vcproj'`\
	  && $(remove_distdir); \
	fi

# For `make dist' to work properly, we need the developer to configure
# libsbml with certain flags, so that certain auto-generated files are
# present when `make dist' runs and looks for them.

check_vars_list = USE_SWIG USE_JAVA USE_LISP USE_PYTHON USE_PERL
num_vars        = $(words $(check_vars_list))
num_vars_set    = $(words $(foreach var,$(check_vars_list),$($(var))))

config-check:
	@if test $(num_vars_set) != $(num_vars); then \
	  echo "Please reconfigure with options $(check_vars_list)"; \
	  echo "before running 'make dist'"; \
	  exit 2; \
	fi

dist-all: $(distfiles)
	$(MAKE) $(MAKEFLAGS) all
	-rm -f $(distarchive)
	@$(remove_distdir)
	mkdir -p $(DISTDIR)
	@list='$(distfiles)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="$$dir"; \
	    $(MKINSTALLDIRS) "$(DISTDIR)/$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(DISTDIR)/$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(DISTDIR)/$$dir || exit 1; \
	  else \
	    test -f $(DISTDIR)/$$file \
	    || cp -p $$d/$$file $(DISTDIR)/$$file \
	    || exit 1; \
	  fi; \
	done
	@list='$(subdirs)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(DISTDIR)/$$subdir \
	    || mkdir $(DISTDIR)/$$subdir \
	    || exit 1; \
	    $(MAKE) $(MAKEFLAGS) -wC $$subdir \
	        TOP_DISTDIR="$(TOP_DISTDIR)" \
	        DISTDIR=$(DISTDIR) \
	        dist \
	      || exit 1; \
	  fi; \
	done
	-@find $(DISTDIR) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(INSTALL_SH) -c -m a+r {} {} \; \
	|| chmod -R a+r $(DISTDIR)

## This target untars the dist file and tries a VPATH configuration.  Then
## it guarantees that the distribution is self-contained by making another
## tarfile.
#distcheck: dist
#	$(remove_distdir)
#	GZIP=$(gzip_env) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
#	chmod -R a-w $(distdir); chmod a+w $(distdir)
#	mkdir $(distdir)/=build
#	mkdir $(distdir)/=inst
#	chmod a-w $(distdir)
#	dc_install_base=`$(am__cd) $(distdir)/=inst && pwd` \
#	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
#	  && cd $(distdir)/=build \
#	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
#	    $(DISTCHECK_CONFIGURE_FLAGS) \
#	  && $(MAKE) $(AM_MAKEFLAGS) \
#	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
#	  && $(MAKE) $(AM_MAKEFLAGS) check \
#	  && $(MAKE) $(AM_MAKEFLAGS) install \
#	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
#	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
#	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
#	        distuninstallcheck \
#	  && chmod -R a-w "$$dc_install_base" \
#	  && ({ \
#	       (cd ../.. && $(MKINSTALLDIRS) "$$dc_destdir") \
#	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
#	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
#	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
#	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
#	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
#	  && rm -rf "$$dc_destdir" \
#	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
#	  && rm -f $(distdir).tar.gz \
#	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
#	$(remove_distdir)
#	@echo "$(distdir).tar.gz is ready for distribution" | \
#	  sed 'h;s/./=/g;p;x;p;x'

#distuninstallcheck:
#	cd $(distuninstallcheck_dir) \
#	&& test `find . -type f -print | wc -l` -le 1 \
#	   || { echo "ERROR: files left after uninstall:" ; \
#	        if test -n "$(DESTDIR)"; then \
#	          echo "  (check DESTDIR support)"; \
#	        fi ; \
#	        find . -type f -print ; \
#	        exit 1; } >&2

#distcleancheck: distclean
#	if test '$(srcdir)' = . ; then \
#	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
#	  exit 1 ; \
#	fi
#	test `find . -type f -print | wc -l` -eq 0 \
#	  || { echo "ERROR: files left in build directory after distclean:" ; \
#	       find -type f -print ; \
#	       exit 1; } >&2


# -----------------------------------------------------------------------------
# Common default rules.
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


# -----------------------------------------------------------------------------
# End.
# -----------------------------------------------------------------------------
